/* Generated by the Nim Compiler v2.1.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI671088643 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI671088654 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1023410201 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410200 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410199 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410198 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410196 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410191 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410190 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410189 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410188 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410187 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1023410186 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1023410185 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671088653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088655 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182339 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182340 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554451 = {size: 0,kind: 26,base: null,node: null,finalizer: null};
var NTI1191182351 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182366 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182363 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182360 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182357 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182347 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI536870935 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI922746906 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975059 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI754975092 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI671088646 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI671089165 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI671088651 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI671088644 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI671088652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555823 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555169 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555176 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555174 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555174 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555174.node = NNI33555174;
NTI33555176.base = NTI33555173;
NTI33555177.base = NTI33555173;
var NNI33555173 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555176, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555177, name: "up", sons: null}]};
NTI33555173.node = NNI33555173;
var NNI33555169 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555169.node = NNI33555169;
NTI33555173.base = NTI33555169;
NTI33555174.base = NTI33555173;
NTI134217745.base = NTI33555174;
var NNI33555823 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555823.node = NNI33555823;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555174;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555174;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555174;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555175 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555173;
NTI134217746.base = NTI33555175;
var NNI671088644 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI671088644, name: "PRINT_ALL", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI671088644, name: "PRINT_FAILURES", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088644, name: "PRINT_NONE", len: 0, sons: null}}};
NTI671088644.node = NNI671088644;
var NNI671088652 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "colorOutput", len: 0, typ: NTI33554466, name: "colorOutput", sons: null}, 
{kind: 1, offset: "outputLevel", len: 0, typ: NTI671088644, name: "outputLevel", sons: null}, 
{kind: 1, offset: "isInSuite", len: 0, typ: NTI33554466, name: "isInSuite", sons: null}, 
{kind: 1, offset: "isInTest", len: 0, typ: NTI33554466, name: "isInTest", sons: null}]};
NTI671088652.node = NNI671088652;
var NNI671088651 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI671088651.node = NNI671088651;
NTI671088651.base = NTI33555169;
NTI671088652.base = NTI671088651;
NTI671088646.base = NTI671088651;
NTI671089165.base = NTI671088646;
NTI754975092.base = NTI33554449;
NTI754975059.base = NTI33554449;
NTI922746906.base = NTI33554449;
var NNI536870935 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI536870935.node = NNI536870935;
NTI1191182351.base = NTI33554451;
var NNI1191182366 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1107296259, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1191182351, name: "Field2", sons: null}]};
NTI1191182366.node = NNI1191182366;
NTI1191182363.base = NTI1191182366;
var NNI1191182360 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1191182363, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1191182360.node = NNI1191182360;
NTI1191182357.base = NTI1191182360;
var NNI1191182347 = {kind: 1, offset: "tbl", len: 0, typ: NTI1191182357, name: "tbl", sons: null};
NTI1191182347.node = NNI1191182347;
NTI1191182347.base = NTI33555169;
NTI536870935.base = NTI1191182347;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI1191182340 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1191182340.node = NNI1191182340;
NTI1191182340.base = NTI33555174;
var NNI1191182339 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1191182339.node = NNI1191182339;
NTI1191182339.base = NTI33555174;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
NTI671088655.base = NTI33554449;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555174;
var NNI1023410186 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1023410187, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1023410188, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1023410189, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1023410190, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1023410191, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1023410196, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1023410198, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1023410199, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1023410200, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1023410201, name: "flushImpl", sons: null}]};
NTI1023410186.node = NNI1023410186;
NTI1023410186.base = NTI33555169;
NTI1023410185.base = NTI1023410186;
NTI671088654.base = NTI33554449;
var NNI671088653 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "stream", len: 0, typ: NTI1023410185, name: "stream", sons: null}, 
{kind: 1, offset: "testErrors", len: 0, typ: NTI671088654, name: "testErrors", sons: null}, 
{kind: 1, offset: "testStartTime", len: 0, typ: NTI33554445, name: "testStartTime", sons: null}, 
{kind: 1, offset: "testStackTrace", len: 0, typ: NTI33554449, name: "testStackTrace", sons: null}]};
NTI671088653.node = NNI671088653;
NTI671088653.base = NTI671088651;
var NNI671088643 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI671088643, name: "OK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI671088643, name: "FAILED", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI671088643, name: "SKIPPED", len: 0, sons: null}}};
NTI671088643.node = NNI671088643;

function toJSStr(s_33556886) {
  var result_33556887 = null;

    var res_33556928 = newSeq_33556904((s_33556886).length);
    var i_33556929 = 0;
    var j_33556930 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556929 < (s_33556886).length)) break Label2;
          var c_33556931 = s_33556886[i_33556929];
          if ((c_33556931 < 128)) {
          res_33556928[j_33556930] = String.fromCharCode(c_33556931);
          i_33556929 += 1;
          }
          else {
            var helper_33556943 = newSeq_33556904(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556944 = c_33556931.toString(16);
                  if ((((code_33556944) == null ? 0 : (code_33556944).length) == 1)) {
                  helper_33556943.push("%0");;
                  }
                  else {
                  helper_33556943.push("%");;
                  }
                  
                  helper_33556943.push(code_33556944);;
                  i_33556929 += 1;
                  if ((((s_33556886).length <= i_33556929) || (s_33556886[i_33556929] < 128))) {
                  break Label3;
                  }
                  
                  c_33556931 = s_33556886[i_33556929];
                }
            };
++excHandler;
            try {
            res_33556928[j_33556930] = decodeURIComponent(helper_33556943.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556928[j_33556930] = helper_33556943.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556930 += 1;
        }
    };
    if (res_33556928.length < j_33556930) { for (var i = res_33556928.length ; i < j_33556930 ; ++i) res_33556928.push(null); }
               else { res_33556928.length = j_33556930; };
    result_33556887 = res_33556928.join("");

  return result_33556887;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557250, src_33557251, ti_33557252) {
  var result_33557261 = null;

    switch (ti_33557252.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557241(ti_33557252))) {
      result_33557261 = src_33557251;
      }
      else {
        result_33557261 = [src_33557251[0], src_33557251[1]];
      }
      
      break;
    case 19:
            if (dest_33557250 === null || dest_33557250 === undefined) {
        dest_33557250 = {};
      }
      else {
        for (var key in dest_33557250) { delete dest_33557250[key]; }
      }
      for (var key in src_33557251) { dest_33557250[key] = src_33557251[key]; }
      result_33557261 = dest_33557250;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557252.base == null))) {
      result_33557261 = nimCopy(dest_33557250, src_33557251, ti_33557252.base);
      }
      else {
      if ((ti_33557252.kind == 17)) {
      result_33557261 = (dest_33557250 === null || dest_33557250 === undefined) ? {m_type: ti_33557252} : dest_33557250;
      }
      else {
        result_33557261 = (dest_33557250 === null || dest_33557250 === undefined) ? {} : dest_33557250;
      }
      }
      nimCopyAux(result_33557261, src_33557251, ti_33557252.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557251)) { 
        if(dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
          dest_33557250 = new src_33557251.constructor(src_33557251);
        } else {
          dest_33557250.set(src_33557251, 0);
        }
        result_33557261 = dest_33557250;
      } else {
        if (src_33557251 === null) {
          result_33557261 = null;
        }
        else {
          if (dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
            dest_33557250 = new Array(src_33557251.length);
          }
          result_33557261 = dest_33557250;
          for (var i = 0; i < src_33557251.length; ++i) {
            result_33557261[i] = nimCopy(result_33557261[i], src_33557251[i], ti_33557252.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557251 === null) {
        result_33557261 = null;
      }
      else {
        if (dest_33557250 === null || dest_33557250 === undefined || dest_33557250.length != src_33557251.length) {
          dest_33557250 = new Array(src_33557251.length);
        }
        result_33557261 = dest_33557250;
        for (var i = 0; i < src_33557251.length; ++i) {
          result_33557261[i] = nimCopy(result_33557261[i], src_33557251[i], ti_33557252.base);
        }
      }
    
      break;
    case 28:
            if (src_33557251 !== null) {
        result_33557261 = src_33557251.slice(0);
      }
    
      break;
    default: 
      result_33557261 = src_33557251;
      break;
    }

  return result_33557261;

}

function arrayConstr(len_33557296, value_33557297, typ_33557298) {
        var result = new Array(len_33557296);
    for (var i = 0; i < len_33557296; ++i) result[i] = nimCopy(null, value_33557297, typ_33557298);
    return result;
  

  
}

function mnewString(len_33556985) {
        return new Array(len_33556985);
  

  
}

function addInt(a_33557032, b_33557033) {
        var result = a_33557032 + b_33557033;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557306, a_33557307, b_33557308) {
  var result_33557309 = 0;

  BeforeRet: {
    if (((a_33557307 <= i_33557306) && (i_33557306 <= b_33557308))) {
    result_33557309 = i_33557306;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557309;

}

function chckIndx(i_33557301, a_33557302, b_33557303) {
  var result_33557304 = 0;

  BeforeRet: {
    if (((a_33557302 <= i_33557301) && (i_33557301 <= b_33557303))) {
    result_33557304 = i_33557301;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557301, a_33557302, b_33557303);
    }
    
  };

  return result_33557304;

}

function cstrToNimstr(c_33556883) {
      var ln = c_33556883.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556883.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556883.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function raiseException(e_33556638, ename_33556639) {
    e_33556638.name = ename_33556639;
    if ((excHandler == 0)) {
    unhandledException(e_33556638);
    }
    
    e_33556638.trace = nimCopy(null, rawWriteStackTrace_33556589(), NTI33554449);
    throw e_33556638;

  
}

function subInt(a_33557036, b_33557037) {
        var result = a_33557036 - b_33557037;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr([65, 90]);

function eqStrings(a_33557023, b_33557024) {
        if (a_33557023 == b_33557024) return true;
    if (a_33557023 === null && b_33557024.length == 0) return true;
    if (b_33557024 === null && a_33557023.length == 0) return true;
    if ((!a_33557023) || (!b_33557024)) return false;
    var alen = a_33557023.length;
    if (alen != b_33557024.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557023[i] != b_33557024[i]) return false;
    return true;
  

  
}

function nimMax(a_33557090, b_33557091) {
    var Temporary1;

  var result_33557092 = 0;

  BeforeRet: {
    if ((b_33557091 <= a_33557090)) {
    Temporary1 = a_33557090;
    }
    else {
    Temporary1 = b_33557091;
    }
    
    result_33557092 = Temporary1;
    break BeforeRet;
  };

  return result_33557092;

}

function nimMin(a_33557086, b_33557087) {
    var Temporary1;

  var result_33557088 = 0;

  BeforeRet: {
    if ((a_33557086 <= b_33557087)) {
    Temporary1 = a_33557086;
    }
    else {
    Temporary1 = b_33557087;
    }
    
    result_33557088 = Temporary1;
    break BeforeRet;
  };

  return result_33557088;

}

function makeNimstrLit(c_33556880) {
      var result = [];
  for (var i = 0; i < c_33556880.length; ++i) {
    result[i] = c_33556880.charCodeAt(i);
  }
  return result;
  

  
}

function divInt(a_33557044, b_33557045) {
        if (b_33557045 == 0) raiseDivByZero();
    if (b_33557045 == -1 && a_33557044 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557044 / b_33557045);
  

  
}

function mulInt(a_33557040, b_33557041) {
        var result = a_33557040 * b_33557041;
    checkOverflowInt(result);
    return result;
  

  
}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function isObj(obj_33557380, subclass_33557381) {
  var result_33557382 = false;

  BeforeRet: {
    var x_33557383 = obj_33557380;
    if ((x_33557383 == subclass_33557381)) {
    result_33557382 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557383 == subclass_33557381))) break Label2;
          if ((x_33557383 == null)) {
          result_33557382 = false;
          break BeforeRet;
          }
          
          x_33557383 = x_33557383.base;
        }
    };
    result_33557382 = true;
    break BeforeRet;
  };

  return result_33557382;

}

function addChar(x_33557397, c_33557398) {
    x_33557397.push(c_33557398);

  
}
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr(0, 125);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([65, 90]);
var ConstSet7 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet8 = setConstr(46, 44);

function reprEnum(e_33557545, typ_33557546) {
  var result_33557547 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/reprjs.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "reprjs.nim";
    var tmp_33557548 = false;
    F.line = 31;
    var item_33557549 = typ_33557546.node.sons[e_33557545];
    F.line = 32;
    tmp_33557548 = item_33557549 !== undefined
    if (tmp_33557548) {
    F.line = 34;
    result_33557547 = nimCopy(null, makeNimstrLit(item_33557549.name), NTI33554449);
    }
    else {
      F.line = 36;
      result_33557547 = nimCopy(null, (HEX24_369098760(e_33557545) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    
  framePtr = F.prev;

  return result_33557547;

}
var F = {procname: "module syslocks", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/syslocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module syslocks", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/syslocks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module locks", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/core/locks.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module locks", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/core/locks.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function initLock_704643079(lock_704643080) {
  
}
var F = {procname: "module exitprocs", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/exitprocs.nim", line: 0};
framePtr = F;
F.line = 24;
F.filename = "exitprocs.nim";
var gFunsLock_687865870 = [({})];
F.line = 25;
var gFuns_687865871 = [[]];
F.line = 27;
initLock_704643079(gFunsLock_687865870[0]);
framePtr = F.prev;
var F = {procname: "module exitprocs", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/exitprocs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/core/macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strbasics", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/strbasics.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jscore", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/js/jscore.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/times.nim", line: 0};
framePtr = F;
F.line = 1371;
F.filename = "times.nim";
if (globalThis.utcInstance_1040189043 === undefined) {
  globalThis.utcInstance_1040189043 = [null];
}
F.line = 1372;
if (globalThis.localInstance_1040189044 === undefined) {
  globalThis.localInstance_1040189044 = [null];
}
framePtr = F.prev;
var F = {procname: "module times", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/times.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/hashes.nim", line: 0};
framePtr = F;
F.line = 218;
F.filename = "hashes.nim";
var objectID_1107296431 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module outparams", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/outparams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unittest", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
framePtr = F;
F.line = 171;
F.filename = "unittest.nim";
if (globalThis.abortOnError_671088682 === undefined) {
  globalThis.abortOnError_671088682 = [false];
}
F.line = 178;
if (globalThis.checkpoints_671088683 === undefined) {
  globalThis.checkpoints_671088683 = [[]];
}
F.line = 179;
if (globalThis.formatters_671088684 === undefined) {
  globalThis.formatters_671088684 = [[]];
}
F.line = 180;
if (globalThis.testsFilters_671088690 === undefined) {
  globalThis.testsFilters_671088690 = [({data: [], counter: 0})];
}
F.line = 181;
if (globalThis.disabledParamFiltering_671088691 === undefined) {
  globalThis.disabledParamFiltering_671088691 = [false];
}
F.line = 193;
abortOnError_671088682[0] = false;
framePtr = F.prev;
var F = {procname: "module unittest", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strformat", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strformat.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module pulse", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
framePtr = F;
F.line = 70;
F.filename = "pulse.nim";
var counter_1191182374 = [0];
framePtr = F.prev;
var F = {procname: "module pulse", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function newSeq_33556904(len_33556906) {
  var result_33556907 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556907 = new Array(len_33556906); for (var i = 0 ; i < len_33556906 ; ++i) { result_33556907[i] = null; }  framePtr = F.prev;

  return result_33556907;

}

function isFatPointer_33557241(ti_33557242) {
  var result_33557243 = false;

  BeforeRet: {
    result_33557243 = !((ConstSet1[ti_33557242.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557243;

}

function nimCopyAux(dest_33557254, src_33557255, n_33557256) {
    switch (n_33557256.kind) {
    case 0:
      break;
    case 1:
            dest_33557254[n_33557256.offset] = nimCopy(dest_33557254[n_33557256.offset], src_33557255[n_33557256.offset], n_33557256.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557256.sons.length; i++) {
      nimCopyAux(dest_33557254, src_33557255, n_33557256.sons[i]);
    }
    
      break;
    case 3:
            dest_33557254[n_33557256.offset] = nimCopy(dest_33557254[n_33557256.offset], src_33557255[n_33557256.offset], n_33557256.typ);
      for (var i = 0; i < n_33557256.sons.length; ++i) {
        nimCopyAux(dest_33557254, src_33557255, n_33557256.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556361(x_33556362, x_33556362_Idx, y_33556363) {
          if (x_33556362[x_33556362_Idx] === null) { x_33556362[x_33556362_Idx] = []; }
      var off = x_33556362[x_33556362_Idx].length;
      x_33556362[x_33556362_Idx].length += y_33556363.length;
      for (var i = 0; i < y_33556363.length; ++i) {
        x_33556362[x_33556362_Idx][off+i] = y_33556363.charCodeAt(i);
      }
    

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557030) {
        if (a_33557030 > 2147483647 || a_33557030 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556797, a_33556798, b_33556799) {
    var Temporary1;

    if ((b_33556799 < a_33556798)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556797) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556798) || [],[32,46,46,32] || [],HEX24_369098760(b_33556799) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_301990087(result_301990089, result_301990089_Idx, x_301990090, start_301990091, n_301990092) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990093 = (result_301990089[result_301990089_Idx]).length;
    F.line = 45;
    if (result_301990089[result_301990089_Idx].length < (Temporary1 = chckRange(addInt(old_301990093, n_301990092), 0, 2147483647), Temporary1)) { for (var i = result_301990089[result_301990089_Idx].length; i < Temporary1; ++i) result_301990089[result_301990089_Idx].push(0); }
         else {result_301990089[result_301990089_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990107 = 0;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536872690 = 0;
      Label3: {
        F.line = 120;
          Label4: while (true) {
          if (!(i_536872690 < n_301990092)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990107 = i_536872690;
            F.line = 50;
            result_301990089[result_301990089_Idx][chckIndx(addInt(old_301990093, iHEX60gensym4_301990107), 0, (result_301990089[result_301990089_Idx]).length - 1)] = x_301990090.charCodeAt(chckIndx(addInt(start_301990091, iHEX60gensym4_301990107), 0, (x_301990090).length - 1));
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536872690 = addInt(i_536872690, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars_301990083(result_301990085, result_301990085_Idx, x_301990086) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars_301990087(result_301990085, result_301990085_Idx, x_301990086, 0, ((x_301990086) == null ? 0 : (x_301990086).length));
  framePtr = F.prev;

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars_301990083(result_301990109, result_301990109_Idx, ((x_301990110) + ""));
  framePtr = F.prev;

  
}

function addInt_301990126(result_301990127, result_301990127_Idx, x_301990128) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt_301990108(result_301990127, result_301990127_Idx, BigInt(x_301990128));
  framePtr = F.prev;

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt_301990126(result_369098762, 0, x_369098761);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace_33556496(f_33556497) {
  var result_33556498 = [[]];

    var it_33556506 = f_33556497;
    var i_33556507 = 0;
    var total_33556508 = 0;
    var tempFrames_33556509 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555823);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556506 == null)) && (i_33556507 <= 63))) break Label2;
          tempFrames_33556509[i_33556507].Field0 = it_33556506.procname;
          tempFrames_33556509[i_33556507].Field1 = it_33556506.line;
          tempFrames_33556509[i_33556507].Field2 = it_33556506.filename;
          i_33556507 += 1;
          total_33556508 += 1;
          it_33556506 = it_33556506.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556506 == null))) break Label4;
          total_33556508 += 1;
          it_33556506 = it_33556506.prev;
        }
    };
    result_33556498[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556508 == i_33556507))) {
    result_33556498[0].push.apply(result_33556498[0], [40]);;
    result_33556498[0].push.apply(result_33556498[0], HEX24_369098760((total_33556508 - i_33556507)));;
    result_33556498[0].push.apply(result_33556498[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556539 = 0;
      var colontmp__536872682 = 0;
      colontmp__536872682 = (i_33556507 - 1);
      var res_536872684 = colontmp__536872682;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_536872684)) break Label7;
            j_33556539 = res_536872684;
            result_33556498[0].push.apply(result_33556498[0], cstrToNimstr(tempFrames_33556509[j_33556539].Field2));;
            if ((0 < tempFrames_33556509[j_33556539].Field1)) {
            result_33556498[0].push.apply(result_33556498[0], [40]);;
            addInt_301990126(result_33556498, 0, tempFrames_33556509[j_33556539].Field1);
            if (false) {
            result_33556498[0].push.apply(result_33556498[0], [44,32]);;
            addInt_301990126(result_33556498, 0, 0);
            }
            
            result_33556498[0].push.apply(result_33556498[0], [41]);;
            }
            
            result_33556498[0].push.apply(result_33556498[0], [32,97,116,32]);;
            add_33556361(result_33556498, 0, tempFrames_33556509[j_33556539].Field0);
            result_33556498[0].push.apply(result_33556498[0], [10]);;
            res_536872684 -= 1;
          }
      };
    };

  return result_33556498[0];

}

function rawWriteStackTrace_33556589() {
  var result_33556590 = [];

    if (!((framePtr == null))) {
    result_33556590 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10] || []).concat(auxWriteStackTrace_33556496(framePtr) || []), NTI33554449);
    }
    else {
      result_33556590 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556590;

}

function unhandledException(e_33556634) {
    var buf_33556635 = [[]];
    if (!(((e_33556634.message).length == 0))) {
    buf_33556635[0].push.apply(buf_33556635[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556635[0].push.apply(buf_33556635[0], e_33556634.message);;
    }
    else {
    buf_33556635[0].push.apply(buf_33556635[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556635[0].push.apply(buf_33556635[0], [32,91]);;
    add_33556361(buf_33556635, 0, e_33556634.name);
    buf_33556635[0].push.apply(buf_33556635[0], [93,10]);;
    buf_33556635[0].push.apply(buf_33556635[0], rawWriteStackTrace_33556589());;
    var cbuf_33556636 = toJSStr(buf_33556635[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556636);
  }
  else {
    throw cbuf_33556636;
  }
  

  
}

function sysFatal_268435501(message_268435504) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_268435499(msg_268435500) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal_268435501(msg_268435500);
  framePtr = F.prev;

  
}

function colorOutput_671088870() {
  var result_671088871 = false;

  var F = {procname: "unittest.colorOutput", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 231;
    F.filename = "unittest.nim";
    var color_671088872 = [97,117,116,111];
    F.line = 232;
    switch (toJSStr(color_671088872)) {
    case "auto":
      F.line = 235;
      result_671088871 = false;
      break;
    case "on":
      F.line = 236;
      result_671088871 = true;
      break;
    case "off":
      F.line = 237;
      result_671088871 = false;
      break;
    default: 
      F.line = 238;
      raiseAssert_268435499(color_671088872);
      break;
    }
  framePtr = F.prev;

  return result_671088871;

}

function nimIdentNormalize_754974842(s_754974843) {
  var result_754974844 = [];

  var F = {procname: "strutils.nimIdentNormalize", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 298;
    F.filename = "strutils.nim";
    result_754974844 = nimCopy(null, mnewString(chckRange((s_754974843).length, 0, 2147483647)), NTI33554449);
    if (((s_754974843).length == 0)) {
    F.line = 300;
    break BeforeRet;
    }
    
    F.line = 301;
    result_754974844[chckIndx(0, 0, (result_754974844).length - 1)] = s_754974843[chckIndx(0, 0, (s_754974843).length - 1)];
    F.line = 302;
    var j_754974845 = 1;
    Label1: {
      F.line = 303;
      var i_754974850 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__671088918 = 0;
      F.line = 303;
      F.filename = "strutils.nim";
      colontmp__671088918 = subInt((s_754974843).length, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_671088919 = 1;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_671088919 <= colontmp__671088918)) break Label3;
            F.line = 303;
            F.filename = "strutils.nim";
            i_754974850 = res_671088919;
            if ((ConstSet2[s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)]] != undefined)) {
            F.line = 305;
            result_754974844[chckIndx(j_754974845, 0, (result_754974844).length - 1)] = chckRange(addInt(s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)], 32), 0, 255);
            F.line = 306;
            j_754974845 = addInt(j_754974845, 1);
            }
            else {
            if (!((s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)] == 95))) {
            F.line = 308;
            result_754974844[chckIndx(j_754974845, 0, (result_754974844).length - 1)] = s_754974843[chckIndx(i_754974850, 0, (s_754974843).length - 1)];
            F.line = 309;
            j_754974845 = addInt(j_754974845, 1);
            }
            }
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_671088919 = addInt(res_671088919, 1);
          }
      };
    };
    if (!((j_754974845 == (s_754974843).length))) {
    F.line = 310;
    F.filename = "strutils.nim";
    if (result_754974844.length < chckRange(j_754974845, 0, 2147483647)) { for (var i = result_754974844.length; i < chckRange(j_754974845, 0, 2147483647); ++i) result_754974844.push(0); }
         else {result_754974844.length = chckRange(j_754974845, 0, 2147483647); };
    }
    
  };
  framePtr = F.prev;

  return result_754974844;

}

function parseEnum_671088876(s_671088878) {
    var Temporary1;

  var result_671088879 = 0;

  var F = {procname: "parseEnum.parseEnum", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 1306;
    F.filename = "strutils.nim";
    F.line = 1323;
    switch (toJSStr(nimIdentNormalize_754974842(s_671088878))) {
    case "Printall":
      Temporary1 = 0;
      break;
    case "Printfailures":
      Temporary1 = 1;
      break;
    case "Printnone":
      Temporary1 = 2;
      break;
    default: 
      F.line = 76;
      F.filename = "enumutils.nim";
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_671088878 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_671088879 = Temporary1;
  framePtr = F.prev;

  return result_671088879;

}

function newConsoleOutputFormatter_671088815(outputLevel_671088816, colorOutput_671088817) {
  var result_671088818 = null;

  var F = {procname: "unittest.newConsoleOutputFormatter", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 225;
    F.filename = "unittest.nim";
    result_671088818 = {outputLevel: outputLevel_671088816, colorOutput: colorOutput_671088817, m_type: NTI671088652, isInSuite: false, isInTest: false};
  framePtr = F.prev;

  return result_671088818;

}

function defaultConsoleFormatter_671088873() {
  var result_671088874 = null;

  var F = {procname: "unittest.defaultConsoleFormatter", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 253;
    F.filename = "unittest.nim";
    var colorOutput_671088875 = colorOutput_671088870();
    F.line = 254;
    var outputLevel_671088950 = parseEnum_671088876([80,82,73,78,84,95,65,76,76]);
    F.line = 260;
    result_671088874 = newConsoleOutputFormatter_671088815(outputLevel_671088950, colorOutput_671088875);
  framePtr = F.prev;

  return result_671088874;

}

function ensureInitialized_671089356() {
  var F = {procname: "unittest.ensureInitialized", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    if (((formatters_671088684[0]).length == 0)) {
    F.line = 450;
    F.filename = "unittest.nim";
    formatters_671088684[0] = nimCopy(null, [defaultConsoleFormatter_671088873()], NTI671089165);
    }
    
    if (!(disabledParamFiltering_671088691[0])) {
    }
    
  framePtr = F.prev;

  
}

function len_671089242(s_671089244) {
  var result_671089245 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sets.nim", line: 0};
  framePtr = F;
    F.line = 184;
    F.filename = "sets.nim";
    result_671089245 = s_671089244.counter;
  framePtr = F.prev;

  return result_671089245;

}

function isFilled_1090519079(hcode_1090519080) {
  var result_1090519081 = false;

  var F = {procname: "sets.isFilled", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1090519081 = !((hcode_1090519080 == 0));
  framePtr = F.prev;

  return result_1090519081;

}

function substrEq_754974966(s_754974967, pos_754974968, substr_754974969) {
    var Temporary1;

  var result_754974970 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 370;
    F.filename = "strutils.nim";
    F.line = 370;
    var length_754974971 = (substr_754974969).length;
    if ((0 < length_754974971)) {
    F.line = 372;
    var i_754974972 = 0;
    Label2: {
      F.line = 373;
        Label3: while (true) {
        if (!(((i_754974972 < length_754974971) && (addInt(pos_754974968, i_754974972) < (s_754974967).length)) && (s_754974967[chckIndx(addInt(pos_754974968, i_754974972), 0, (s_754974967).length - 1)] == substr_754974969[chckIndx(i_754974972, 0, (substr_754974969).length - 1)]))) break Label3;
          F.line = 374;
          i_754974972 = addInt(i_754974972, 1);
        }
    };
    Temporary1 = (i_754974972 == length_754974971);
    }
    else {
    Temporary1 = false;
    }
    
    result_754974970 = Temporary1;
  framePtr = F.prev;

  return result_754974970;

}

function substr_33558046(s_33558047, first_33558048, last_33558049) {
  var result_33558050 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 2682;
    F.filename = "system.nim";
    var first_33558051 = nimMax(first_33558048, 0);
    F.line = 2683;
    var L_33558052 = nimMax(addInt(subInt(nimMin(last_33558049, (s_33558047).length - 1), first_33558051), 1), 0);
    F.line = 2684;
    result_33558050 = nimCopy(null, mnewString(chckRange(L_33558052, 0, 2147483647)), NTI33554449);
    Label1: {
      F.line = 2685;
      var i_33558057 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536872714 = 0;
      F.line = 2685;
      F.filename = "system.nim";
      colontmp__536872714 = subInt(L_33558052, 1);
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536872715 = 0;
      Label2: {
        F.line = 91;
          Label3: while (true) {
          if (!(res_536872715 <= colontmp__536872714)) break Label3;
            F.line = 2685;
            F.filename = "system.nim";
            i_33558057 = res_536872715;
            F.line = 2685;
            result_33558050[chckIndx(i_33558057, 0, (result_33558050).length - 1)] = s_33558047[chckIndx(addInt(i_33558057, first_33558051), 0, (s_33558047).length - 1)];
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536872715 = addInt(res_536872715, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_33558050;

}

function nsuSplitString(s_754975260, sep_754975261, maxsplit_754975262) {
      var Temporary2;

  var result_754975263 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_754975263 = nimCopy(null, [], NTI754975092);
    Label1: {
      F.line = 418;
      var xHEX60gensym69_754975269 = [];
      F.line = 535;
      if (((sep_754975261).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_754975261).length;
      }
      
      var sepLen_536872706 = Temporary2;
      F.line = 389;
      var lastHEX60gensym41_536872707 = 0;
      F.line = 390;
      var splitsHEX60gensym41_536872708 = maxsplit_754975262;
      Label3: {
        F.line = 537;
          Label4: while (true) {
          if (!(lastHEX60gensym41_536872707 <= (s_754975260).length)) break Label4;
            F.line = 393;
            var firstHEX60gensym41_536872710 = lastHEX60gensym41_536872707;
            Label5: {
              F.line = 394;
                Label6: while (true) {
                if (!((lastHEX60gensym41_536872707 < (s_754975260).length) && !(substrEq_754974966(s_754975260, lastHEX60gensym41_536872707, sep_754975261)))) break Label6;
                  F.line = 395;
                  lastHEX60gensym41_536872707 = addInt(lastHEX60gensym41_536872707, 1);
                }
            };
            if ((splitsHEX60gensym41_536872708 == 0)) {
            F.line = 396;
            lastHEX60gensym41_536872707 = (s_754975260).length;
            }
            
            F.line = 803;
            xHEX60gensym69_754975269 = substr_33558046(s_754975260, firstHEX60gensym41_536872710, subInt(lastHEX60gensym41_536872707, 1));
            F.line = 803;
            var Temporary7 = nimCopy(null, xHEX60gensym69_754975269, NTI33554449);
            result_754975263.push(Temporary7);;
            if ((splitsHEX60gensym41_536872708 == 0)) {
            F.line = 398;
            break Label3;
            }
            
            F.line = 399;
            splitsHEX60gensym41_536872708 = subInt(splitsHEX60gensym41_536872708, 1);
            F.line = 400;
            lastHEX60gensym41_536872707 = addInt(lastHEX60gensym41_536872707, sepLen_536872706);
          }
      };
    };
  framePtr = F.prev;

  return result_754975263;

}

function find_671089195(a_671089198, item_671089199) {
  var result_671089200 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1679;
    F.filename = "system.nim";
    result_671089200 = 0;
    Label1: {
      F.line = 1680;
      var i_671089204 = 0;
      F.line = 23;
      F.filename = "iterators.nim";
      var i_536872719 = 0;
      Label2: {
        F.line = 24;
          Label3: while (true) {
          if (!(i_536872719 < (a_671089198).length)) break Label3;
            F.line = 1680;
            F.filename = "system.nim";
            i_671089204 = a_671089198[chckIndx(i_536872719, 0, (a_671089198).length - 1)];
            if ((i_671089204 == item_671089199)) {
            F.line = 1681;
            break BeforeRet;
            }
            
            F.line = 1680;
            result_671089200 = addInt(result_671089200, 1);
            F.line = 26;
            F.filename = "iterators.nim";
            i_536872719 = addInt(i_536872719, 1);
          }
      };
    };
    F.line = 1683;
    F.filename = "system.nim";
    result_671089200 = (-1);
  };
  framePtr = F.prev;

  return result_671089200;

}

function contains_671089190(a_671089192, item_671089193) {
  var result_671089194 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 1697;
    F.filename = "system.nim";
    result_671089194 = (0 <= find_671089195(a_671089192, item_671089193));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089194;

}

function nsuSplitChar(s_754975230, sep_754975231, maxsplit_754975232) {
  var result_754975233 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 417;
    F.filename = "strutils.nim";
    result_754975233 = nimCopy(null, [], NTI754975059);
    Label1: {
      F.line = 418;
      var xHEX60gensym67_754975239 = [];
      F.line = 389;
      var lastHEX60gensym34_536872724 = 0;
      F.line = 390;
      var splitsHEX60gensym34_536872725 = maxsplit_754975232;
      Label2: {
        F.line = 449;
          Label3: while (true) {
          if (!(lastHEX60gensym34_536872724 <= (s_754975230).length)) break Label3;
            F.line = 393;
            var firstHEX60gensym34_536872727 = lastHEX60gensym34_536872724;
            Label4: {
              F.line = 394;
                Label5: while (true) {
                if (!((lastHEX60gensym34_536872724 < (s_754975230).length) && !((s_754975230[chckIndx(lastHEX60gensym34_536872724, 0, (s_754975230).length - 1)] == sep_754975231)))) break Label5;
                  F.line = 395;
                  lastHEX60gensym34_536872724 = addInt(lastHEX60gensym34_536872724, 1);
                }
            };
            if ((splitsHEX60gensym34_536872725 == 0)) {
            F.line = 396;
            lastHEX60gensym34_536872724 = (s_754975230).length;
            }
            
            F.line = 759;
            xHEX60gensym67_754975239 = substr_33558046(s_754975230, firstHEX60gensym34_536872727, subInt(lastHEX60gensym34_536872724, 1));
            F.line = 759;
            var Temporary6 = nimCopy(null, xHEX60gensym67_754975239, NTI33554449);
            result_754975233.push(Temporary6);;
            if ((splitsHEX60gensym34_536872725 == 0)) {
            F.line = 398;
            break Label2;
            }
            
            F.line = 399;
            splitsHEX60gensym34_536872725 = subInt(splitsHEX60gensym34_536872725, 1);
            F.line = 400;
            lastHEX60gensym34_536872724 = addInt(lastHEX60gensym34_536872724, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754975233;

}

function nsuStartsWith(s_754976119, prefix_754976120) {
  var result_754976121 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 56;
    F.filename = "strimpl.nim";
    var prefixLenHEX60gensym146_754976126 = (prefix_754976120).length;
    F.line = 57;
    var sLenHEX60gensym146_754976127 = (s_754976119).length;
    F.line = 58;
    var iHEX60gensym146_754976128 = 0;
    Label1: {
      F.line = 1646;
      F.filename = "strutils.nim";
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_754976126 <= iHEX60gensym146_754976128)) {
          F.line = 60;
          F.filename = "strimpl.nim";
          result_754976121 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_754976127 <= iHEX60gensym146_754976128) || !((s_754976119[chckIndx(iHEX60gensym146_754976128, 0, (s_754976119).length - 1)] == prefix_754976120[chckIndx(iHEX60gensym146_754976128, 0, (prefix_754976120).length - 1)])))) {
          F.line = 61;
          result_754976121 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym146_754976128 = addInt(iHEX60gensym146_754976128, 1);
        }
    };
  };
  framePtr = F.prev;

  return result_754976121;

}

function nsuEndsWith(s_754976138, suffix_754976139) {
  var result_754976140 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 65;
    F.filename = "strimpl.nim";
    var suffixLenHEX60gensym153_754976146 = (suffix_754976139).length;
    F.line = 66;
    var sLenHEX60gensym153_754976147 = (s_754976138).length;
    F.line = 67;
    var iHEX60gensym153_754976148 = 0;
    F.line = 68;
    var jHEX60gensym153_754976149 = subInt(sLenHEX60gensym153_754976147, suffixLenHEX60gensym153_754976146);
    Label1: {
      F.line = 69;
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_754976148, jHEX60gensym153_754976149)) && (addInt(iHEX60gensym153_754976148, jHEX60gensym153_754976149) < sLenHEX60gensym153_754976147))) break Label2;
          if (!((s_754976138[chckIndx(addInt(iHEX60gensym153_754976148, jHEX60gensym153_754976149), 0, (s_754976138).length - 1)] == suffix_754976139[chckIndx(iHEX60gensym153_754976148, 0, (suffix_754976139).length - 1)]))) {
          F.line = 70;
          result_754976140 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym153_754976148 = addInt(iHEX60gensym153_754976148, 1);
        }
    };
    if ((suffixLenHEX60gensym153_754976146 <= iHEX60gensym153_754976148)) {
    F.line = 72;
    result_754976140 = true;
    break BeforeRet;
    }
    
  };
  framePtr = F.prev;

  return result_754976140;

}

function glob_671089186(matcher_671089187, filter_671089188) {
  var result_671089189 = false;

  var F = {procname: "unittest.glob", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((filter_671089188).length == 0)) {
    F.line = 404;
    F.filename = "unittest.nim";
    result_671089189 = true;
    break BeforeRet;
    }
    
    if (!(contains_671089190(filter_671089188, 42))) {
    F.line = 407;
    result_671089189 = eqStrings(matcher_671089187, filter_671089188);
    break BeforeRet;
    }
    
    F.line = 409;
    var beforeAndAfter_671089209 = nsuSplitChar(filter_671089188, 42, 1);
    if (((beforeAndAfter_671089209).length == 1)) {
    F.line = 412;
    result_671089189 = nsuStartsWith(matcher_671089187, beforeAndAfter_671089209[chckIndx(0, 0, (beforeAndAfter_671089209).length - 1)]);
    break BeforeRet;
    }
    
    if (((matcher_671089187).length < subInt((filter_671089188).length, 1))) {
    F.line = 415;
    result_671089189 = false;
    break BeforeRet;
    }
    
    F.line = 417;
    result_671089189 = (nsuStartsWith(matcher_671089187, beforeAndAfter_671089209[chckIndx(0, 0, (beforeAndAfter_671089209).length - 1)]) && nsuEndsWith(matcher_671089187, beforeAndAfter_671089209[chckIndx(1, 0, (beforeAndAfter_671089209).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089189;

}

function matchFilter_671089213(suiteName_671089214, testName_671089215, filter_671089216) {
  var result_671089217 = false;

  var F = {procname: "unittest.matchFilter", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (eqStrings(filter_671089216, [])) {
    F.line = 422;
    F.filename = "unittest.nim";
    result_671089217 = true;
    break BeforeRet;
    }
    
    if (eqStrings(testName_671089215, filter_671089216)) {
    F.line = 425;
    result_671089217 = true;
    break BeforeRet;
    }
    
    F.line = 426;
    var suiteAndTestFilters_671089218 = nsuSplitString(filter_671089216, [58,58], 1);
    if (((suiteAndTestFilters_671089218).length == 1)) {
    F.line = 430;
    var testFilter_671089222 = nimCopy(null, suiteAndTestFilters_671089218[chckIndx(0, 0, (suiteAndTestFilters_671089218).length - 1)], NTI33554449);
    F.line = 431;
    result_671089217 = glob_671089186(testName_671089215, testFilter_671089222);
    break BeforeRet;
    }
    
    F.line = 433;
    result_671089217 = (glob_671089186(suiteName_671089214, suiteAndTestFilters_671089218[chckIndx(0, 0, (suiteAndTestFilters_671089218).length - 1)]) && glob_671089186(testName_671089215, suiteAndTestFilters_671089218[chckIndx(1, 0, (suiteAndTestFilters_671089218).length - 1)]));
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089217;

}

function failedAssertImpl_268435541(msg_268435542) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert_268435499(msg_268435542);
  framePtr = F.prev;

  
}

function shouldRun_671089223(currentSuiteName_671089224, testName_671089225) {
  var result_671089226 = false;

  var F = {procname: "unittest.shouldRun", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if ((len_671089242(testsFilters_671088690[0]) == 0)) {
    F.line = 440;
    F.filename = "unittest.nim";
    result_671089226 = true;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 442;
      var f_671089338 = [];
      F.line = 268;
      F.filename = "sets.nim";
      var length_536872697 = len_671089242(testsFilters_671088690[0]);
      Label2: {
        F.line = 269;
        var h_536872699 = 0;
        F.line = 75;
        F.filename = "iterators_1.nim";
        var colontmp__536872700 = 0;
        F.line = 269;
        F.filename = "sets.nim";
        colontmp__536872700 = (testsFilters_671088690[0].data).length - 1;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_536872701 = 0;
        Label3: {
          F.line = 91;
            Label4: while (true) {
            if (!(res_536872701 <= colontmp__536872700)) break Label4;
              F.line = 269;
              F.filename = "sets.nim";
              h_536872699 = res_536872701;
              if (isFilled_1090519079(testsFilters_671088690[0].data[chckIndx(h_536872699, 0, (testsFilters_671088690[0].data).length - 1)].Field0)) {
              F.line = 442;
              F.filename = "unittest.nim";
              f_671089338 = testsFilters_671088690[0].data[chckIndx(h_536872699, 0, (testsFilters_671088690[0].data).length - 1)].Field1;
              if (matchFilter_671089213(currentSuiteName_671089224, testName_671089225, f_671089338)) {
              F.line = 444;
              result_671089226 = true;
              break BeforeRet;
              }
              
              if (!((len_671089242(testsFilters_671088690[0]) == length_536872697))) {
              F.line = 272;
              F.filename = "sets.nim";
              failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/sets.nim(272, 13) `len(s) == length` the length of the HashSet changed while iterating over it"));
              }
              
              }
              
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_536872701 = addInt(res_536872701, 1);
            }
        };
      };
    };
    F.line = 446;
    F.filename = "unittest.nim";
    result_671089226 = false;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_671089226;

}

function nextPowerOfTwo_788529397(x_788529398) {
  var result_788529399 = 0;

    result_788529399 = (x_788529398 - 1);
    result_788529399 = (result_788529399 | (result_788529399 >> 16));
    result_788529399 = (result_788529399 | (result_788529399 >> 8));
    result_788529399 = (result_788529399 | (result_788529399 >> 4));
    result_788529399 = (result_788529399 | (result_788529399 >> 2));
    result_788529399 = (result_788529399 | (result_788529399 >> 1));
    result_788529399 += (1 + ((x_788529398 <= 0) ? 1 : 0));

  return result_788529399;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_1224736810(count_1224736811) {
  var result_1224736812 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 39;
    F.filename = "hashcommon.nim";
    result_1224736812 = nextPowerOfTwo_788529397(addInt(divInt(mulInt(count_1224736811, 3), 2), 4));
  framePtr = F.prev;

  return result_1224736812;

}

function initTable_536870944(initialSize_536870947) {
  var result_536870948 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym1_536870950 = slotsNeeded_1224736810(chckRange(initialSize_536870947, 0, 2147483647));
    F.line = 169;
    result_536870948.counter = 0;
    F.line = 170;
    result_536870948.data = new Array(chckRange(correctSizeHEX60gensym1_536870950, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_536870950, 0, 2147483647) ; ++i) { result_536870948.data[i] = {Field0: 0, Field1: 0, Field2: []}; }  framePtr = F.prev;

  return result_536870948;

}

function newTable_536870931(initialSize_536870934) {
  var result_536870935 = null;

  var F = {procname: "newTable.newTable", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 826;
    F.filename = "tables.nim";
    result_536870935 = ({data: [], counter: 0});
    F.line = 828;
    result_536870935 = nimCopy(result_536870935, initTable_536870944(initialSize_536870934), NTI1191182360);
  framePtr = F.prev;

  return result_536870935;

}

function newEventHandler_536870927() {
  var result_536870929 = ({m_type: NTI536870935, tbl: null});

  var F = {procname: "newEventHandler.newEventHandler", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    F.line = 47;
    F.filename = "pulse.nim";
    result_536870929 = nimCopy(result_536870929, {tbl: newTable_536870931(32), m_type: NTI536870935}, NTI536870935);
  framePtr = F.prev;

  return result_536870929;

}

function hasJsBigInt_872415275() {
  var result_872415276 = false;

    result_872415276 = typeof BigInt != 'undefined'

  return result_872415276;

}

function hiXorLoJs_1107296341(a_1107296342, b_1107296343) {
  var result_1107296344 = 0n;

  var F = {procname: "hashes.hiXorLoJs", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 140;
    F.filename = "hashes.nim";
    var prod_1107296345 = (a_1107296342 * b_1107296343);
    F.line = 141;
    var mask_1107296346 = BigInt("0xffffffffffffffff");
    F.line = 142;
    result_1107296344 = ((prod_1107296345 >> BigInt("64")) ^ (prod_1107296345 & mask_1107296346));
  framePtr = F.prev;

  return result_1107296344;

}

function hashWangYi1_1107296447(x_1107296449) {
  var result_1107296450 = 0;

  var F = {procname: "hashWangYi1.hashWangYi1", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    if (hasJsBigInt_872415275()) {
    F.line = 182;
    F.filename = "hashes.nim";
    F.line = 146;
    var P0HEX60gensym4_1107296464 = BigInt("0xa0761d6478bd642f");
    F.line = 147;
    var P1HEX60gensym4_1107296465 = BigInt("0xe7037ed1a0b428db");
    F.line = 148;
    var P58HEX60gensym4_1107296466 = BigInt("0xeb44accab455d16d");
    F.line = 149;
    var resHEX60gensym4_1107296467 = hiXorLoJs_1107296341(hiXorLoJs_1107296341(P0HEX60gensym4_1107296464, (BigInt(x_1107296449) ^ P1HEX60gensym4_1107296465)), P58HEX60gensym4_1107296466);
    result_1107296450 = Number((() => { const i = resHEX60gensym4_1107296467, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      F.line = 184;
      result_1107296450 = (Number(BigInt.asIntN(32, x_1107296449)) & Number(BigInt.asIntN(32, 4294967295n)));
    }
    
  framePtr = F.prev;

  return result_1107296450;

}

function hash_536871137(x_536871139) {
  var result_536871140 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/hashes.nim", line: 0};
  framePtr = F;
    F.line = 214;
    F.filename = "hashes.nim";
    result_536871140 = hashWangYi1_1107296447(BigInt.asUintN(64, BigInt(x_536871139)));
  framePtr = F.prev;

  return result_536871140;

}

function isFilled_1224736799(hcode_1224736800) {
  var result_1224736801 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "hashcommon.nim";
    result_1224736801 = !((hcode_1224736800 == 0));
  framePtr = F.prev;

  return result_1224736801;

}

function nextTry_1224736802(h_1224736803, maxHash_1224736804) {
  var result_1224736805 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "hashcommon.nim";
    result_1224736805 = (addInt(h_1224736803, 1) & maxHash_1224736804);
  framePtr = F.prev;

  return result_1224736805;

}

function rawGet_536871130(t_536871133, key_536871134, hc_536871135, hc_536871135_Idx) {
  var result_536871136 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 59;
    F.filename = "hashcommon.nim";
    hc_536871135[hc_536871135_Idx] = hash_536871137(key_536871134);
    if ((hc_536871135[hc_536871135_Idx] == 0)) {
    F.line = 61;
    hc_536871135[hc_536871135_Idx] = 314159265;
    }
    
    if (((t_536871133.data).length == 0)) {
    F.line = 43;
    result_536871136 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_536871159 = (hc_536871135[hc_536871135_Idx] & (t_536871133.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1224736799(t_536871133.data[chckIndx(h_536871159, 0, (t_536871133.data).length - 1)].Field0)) break Label2;
          if (((t_536871133.data[chckIndx(h_536871159, 0, (t_536871133.data).length - 1)].Field0 == hc_536871135[hc_536871135_Idx]) && (t_536871133.data[chckIndx(h_536871159, 0, (t_536871133.data).length - 1)].Field1 == key_536871134))) {
          F.line = 51;
          result_536871136 = h_536871159;
          break BeforeRet;
          }
          
          F.line = 52;
          h_536871159 = nextTry_1224736802(h_536871159, (t_536871133.data).length - 1);
        }
    };
    F.line = 53;
    result_536871136 = subInt((-1), h_536871159);
  };
  framePtr = F.prev;

  return result_536871136;

}

function hasKey_536871123(t_536871126, key_536871127) {
  var result_536871128 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 369;
    F.filename = "tables.nim";
    var hc_536871129 = [0];
    F.line = 370;
    result_536871128 = (0 <= rawGet_536871130(t_536871126, key_536871127, hc_536871129, 0));
  framePtr = F.prev;

  return result_536871128;

}

function hasKey_536871092(t_536871095, key_536871096) {
  var result_536871097 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 911;
    F.filename = "tables.nim";
    result_536871097 = hasKey_536871123(t_536871095, key_536871096);
  framePtr = F.prev;

  return result_536871097;

}

function getTInfo_536871032() {
  var result_536871035 = 0;

  var F = {procname: "getTInfo.getTInfo", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    F.line = 73;
    F.filename = "pulse.nim";
    F.line = 73;
    if (globalThis.id_536871036 === undefined) {
      globalThis.id_536871036 = counter_1191182374[0];
    }
    F.line = 2648;
    F.filename = "system.nim";
    if (globalThis.alreadyExecutedHEX60gensym0_536871037 === undefined) {
      globalThis.alreadyExecutedHEX60gensym0_536871037 = [false];
    }
    if (!(alreadyExecutedHEX60gensym0_536871037[0])) {
    F.line = 2650;
    alreadyExecutedHEX60gensym0_536871037[0] = true;
    F.line = 75;
    F.filename = "pulse.nim";
    counter_1191182374[0] = addInt(counter_1191182374[0], 1);
    }
    
    result_536871035 = id_536871036;
  framePtr = F.prev;

  return result_536871035;

}

function mustRehash_536871322(t_536871324) {
  var result_536871325 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_536871324.counter < (t_536871324.data).length))) {
    F.line = 34;
    F.filename = "hashcommon.nim";
    failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 35;
    result_536871325 = ((mulInt((t_536871324.data).length, 2) < mulInt(t_536871324.counter, 3)) || (subInt((t_536871324.data).length, t_536871324.counter) < 4));
  framePtr = F.prev;

  return result_536871325;

}

function rawInsert_536871399(t_536871403, data_536871404, data_536871404_Idx, key_536871405, val_536871406, hc_536871407, h_536871408) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "tableimpl.nim";
    data_536871404[data_536871404_Idx][chckIndx(h_536871408, 0, (data_536871404[data_536871404_Idx]).length - 1)].Field1 = key_536871405;
    F.line = 26;
    data_536871404[data_536871404_Idx][chckIndx(h_536871408, 0, (data_536871404[data_536871404_Idx]).length - 1)].Field2 = nimCopy(null, val_536871406, NTI1191182351);
    F.line = 27;
    data_536871404[data_536871404_Idx][chckIndx(h_536871408, 0, (data_536871404[data_536871404_Idx]).length - 1)].Field0 = hc_536871407;
  framePtr = F.prev;

  
}

function enlarge_536871357(t_536871360) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 247;
    F.filename = "tables.nim";
    var n_536871363 = [];
    F.line = 248;
    n_536871363 = new Array(chckRange(mulInt((t_536871360.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_536871360.data).length, 2), 0, 2147483647) ; ++i) { n_536871363[i] = {Field0: 0, Field1: 0, Field2: []}; }    F.line = 249;
    var Temporary1 = t_536871360.data; t_536871360.data = n_536871363; n_536871363 = Temporary1;    Label2: {
      F.line = 250;
      var i_536871387 = 0;
      F.line = 43;
      F.filename = "iterators_1.nim";
      var colontmp__536872734 = 0;
      F.line = 250;
      F.filename = "tables.nim";
      colontmp__536872734 = (n_536871363).length - 1;
      F.line = 65;
      F.filename = "iterators_1.nim";
      var res_536872736 = 0;
      Label3: {
        F.line = 66;
          Label4: while (true) {
          if (!(res_536872736 <= colontmp__536872734)) break Label4;
            F.line = 250;
            F.filename = "tables.nim";
            i_536871387 = res_536872736;
            F.line = 251;
            var eh_536871388 = n_536871363[chckIndx(i_536871387, 0, (n_536871363).length - 1)].Field0;
            if (isFilled_1224736799(eh_536871388)) {
            F.line = 253;
            var j_536871392 = (eh_536871388 & (t_536871360.data).length - 1);
            Label5: {
              F.line = 254;
                Label6: while (true) {
                if (!isFilled_1224736799(t_536871360.data[chckIndx(j_536871392, 0, (t_536871360.data).length - 1)].Field0)) break Label6;
                  F.line = 255;
                  j_536871392 = nextTry_1224736802(j_536871392, (t_536871360.data).length - 1);
                }
            };
            F.line = 257;
            rawInsert_536871399(t_536871360, t_536871360, "data", n_536871363[chckIndx(i_536871387, 0, (n_536871363).length - 1)].Field1, n_536871363[chckIndx(i_536871387, 0, (n_536871363).length - 1)].Field2, eh_536871388, j_536871392);
            }
            
            F.line = 68;
            F.filename = "iterators_1.nim";
            res_536872736 = addInt(res_536872736, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function rawGetKnownHC_536871409(t_536871412, key_536871413, hc_536871414) {
  var result_536871415 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    if (((t_536871412.data).length == 0)) {
    F.line = 43;
    F.filename = "hashcommon.nim";
    result_536871415 = (-1);
    break BeforeRet;
    }
    
    F.line = 44;
    var h_536871426 = (hc_536871414 & (t_536871412.data).length - 1);
    Label1: {
      F.line = 45;
        Label2: while (true) {
        if (!isFilled_1224736799(t_536871412.data[chckIndx(h_536871426, 0, (t_536871412.data).length - 1)].Field0)) break Label2;
          if (((t_536871412.data[chckIndx(h_536871426, 0, (t_536871412.data).length - 1)].Field0 == hc_536871414) && (t_536871412.data[chckIndx(h_536871426, 0, (t_536871412.data).length - 1)].Field1 == key_536871413))) {
          F.line = 51;
          result_536871415 = h_536871426;
          break BeforeRet;
          }
          
          F.line = 52;
          h_536871426 = nextTry_1224736802(h_536871426, (t_536871412.data).length - 1);
        }
    };
    F.line = 53;
    result_536871415 = subInt((-1), h_536871426);
  };
  framePtr = F.prev;

  return result_536871415;

}

function HEX5BHEX5DHEX3D_536871277(t_536871280, key_536871281, val_536871282) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    if (((t_536871280.data).length == 0)) {
    F.line = 165;
    F.filename = "tableimpl.nim";
    var correctSizeHEX60gensym7_536871291 = slotsNeeded_1224736810(32);
    F.line = 169;
    t_536871280.counter = 0;
    F.line = 170;
    t_536871280.data = new Array(chckRange(correctSizeHEX60gensym7_536871291, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym7_536871291, 0, 2147483647) ; ++i) { t_536871280.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    F.line = 59;
    var hc_536871301 = [0];
    F.line = 60;
    var index_536871308 = rawGet_536871130(t_536871280, key_536871281, hc_536871301, 0);
    if ((0 <= index_536871308)) {
    F.line = 61;
    t_536871280.data[chckIndx(index_536871308, 0, (t_536871280.data).length - 1)].Field2 = nimCopy(null, val_536871282, NTI1191182351);
    }
    else {
      if (((t_536871280.data).length == 0)) {
      F.line = 165;
      var correctSizeHEX60gensym10_536871317 = slotsNeeded_1224736810(32);
      F.line = 169;
      t_536871280.counter = 0;
      F.line = 170;
      t_536871280.data = new Array(chckRange(correctSizeHEX60gensym10_536871317, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_536871317, 0, 2147483647) ; ++i) { t_536871280.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_536871322(t_536871280)) {
      F.line = 51;
      enlarge_536871357(t_536871280);
      F.line = 52;
      index_536871308 = rawGetKnownHC_536871409(t_536871280, key_536871281, hc_536871301[0]);
      }
      
      F.line = 53;
      index_536871308 = subInt((-1), index_536871308);
      F.line = 54;
      rawInsert_536871399(t_536871280, t_536871280, "data", key_536871281, val_536871282, hc_536871301[0], index_536871308);
      F.line = 62;
      t_536871280.counter = addInt(t_536871280.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_536871246(t_536871249, key_536871250, val_536871251) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 893;
    F.filename = "tables.nim";
    HEX5BHEX5DHEX3D_536871277(t_536871249, key_536871250, val_536871251);
  framePtr = F.prev;

  
}

function newSeq_536871208(len_536871210) {
  var result_536871211 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_536871211 = new Array(len_536871210); for (var i = 0 ; i < len_536871210 ; ++i) { result_536871211[i] = [null, 0]; }  framePtr = F.prev;

  return result_536871211;

}

function registerEventType_536871021(eh_536871025) {
  var F = {procname: "registerEventType.registerEventType", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (hasKey_536871092(eh_536871025.tbl, getTInfo_536871032())) {
    F.line = 109;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,97,108,114,101,97,100,121,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182340, name: null, trace: [], up: null}, "AlreadyRegisteredEventDefect");
    }
    
    F.line = 111;
    HEX5BHEX5DHEX3D_536871246(eh_536871025.tbl, getTInfo_536871032(), newSeq_536871208(0));
  framePtr = F.prev;

  
}

function getTInfo_536871494() {
  var result_536871497 = 0;

  var F = {procname: "getTInfo.getTInfo", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    F.line = 73;
    F.filename = "pulse.nim";
    F.line = 73;
    if (globalThis.id_536871498 === undefined) {
      globalThis.id_536871498 = counter_1191182374[0];
    }
    F.line = 2648;
    F.filename = "system.nim";
    if (globalThis.alreadyExecutedHEX60gensym0_536871499 === undefined) {
      globalThis.alreadyExecutedHEX60gensym0_536871499 = [false];
    }
    if (!(alreadyExecutedHEX60gensym0_536871499[0])) {
    F.line = 2650;
    alreadyExecutedHEX60gensym0_536871499[0] = true;
    F.line = 75;
    F.filename = "pulse.nim";
    counter_1191182374[0] = addInt(counter_1191182374[0], 1);
    }
    
    result_536871497 = id_536871498;
  framePtr = F.prev;

  return result_536871497;

}

function registerEventType_536871483(eh_536871487) {
  var F = {procname: "registerEventType.registerEventType", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (hasKey_536871092(eh_536871487.tbl, getTInfo_536871494())) {
    F.line = 109;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,97,108,114,101,97,100,121,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182340, name: null, trace: [], up: null}, "AlreadyRegisteredEventDefect");
    }
    
    F.line = 111;
    HEX5BHEX5DHEX3D_536871246(eh_536871487.tbl, getTInfo_536871494(), newSeq_536871208(0));
  framePtr = F.prev;

  
}

function getTInfo_536871608() {
  var result_536871611 = 0;

  var F = {procname: "getTInfo.getTInfo", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    F.line = 73;
    F.filename = "pulse.nim";
    F.line = 73;
    if (globalThis.id_536871612 === undefined) {
      globalThis.id_536871612 = counter_1191182374[0];
    }
    F.line = 2648;
    F.filename = "system.nim";
    if (globalThis.alreadyExecutedHEX60gensym0_536871613 === undefined) {
      globalThis.alreadyExecutedHEX60gensym0_536871613 = [false];
    }
    if (!(alreadyExecutedHEX60gensym0_536871613[0])) {
    F.line = 2650;
    alreadyExecutedHEX60gensym0_536871613[0] = true;
    F.line = 75;
    F.filename = "pulse.nim";
    counter_1191182374[0] = addInt(counter_1191182374[0], 1);
    }
    
    result_536871611 = id_536871612;
  framePtr = F.prev;

  return result_536871611;

}

function registerEventType_536871597(eh_536871601) {
  var F = {procname: "registerEventType.registerEventType", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (hasKey_536871092(eh_536871601.tbl, getTInfo_536871608())) {
    F.line = 109;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,97,108,114,101,97,100,121,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182340, name: null, trace: [], up: null}, "AlreadyRegisteredEventDefect");
    }
    
    F.line = 111;
    HEX5BHEX5DHEX3D_536871246(eh_536871601.tbl, getTInfo_536871608(), newSeq_536871208(0));
  framePtr = F.prev;

  
}

function raiseKeyError_536871888(key_536871890) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    F.filename = "tables.nim";
    raiseException({message: [107,101,121,32,110,111,116,32,102,111,117,110,100], parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_536871874(t_536871877, key_536871878) {
  var result_536871879 = null;
  var result_536871879_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 240;
    F.filename = "tables.nim";
    var hcHEX60gensym22_536871880 = [0];
    F.line = 241;
    var indexHEX60gensym22_536871887 = rawGet_536871130(t_536871877, key_536871878, hcHEX60gensym22_536871880, 0);
    if ((0 <= indexHEX60gensym22_536871887)) {
    F.line = 242;
    result_536871879 = t_536871877.data[chckIndx(indexHEX60gensym22_536871887, 0, (t_536871877.data).length - 1)]; result_536871879_Idx = "Field2";
    }
    else {
      F.line = 244;
    raiseKeyError_536871888(key_536871878);
    }
    
  framePtr = F.prev;

  return [result_536871879, result_536871879_Idx];

}

function HEX5BHEX5D_536871838(t_536871841, key_536871842) {
    var Temporary1;

  var result_536871843 = null;
  var result_536871843_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/collections/tables.nim", line: 0};
  framePtr = F;
    F.line = 877;
    F.filename = "tables.nim";
    result_536871843 = (Temporary1 = HEX5BHEX5D_536871874(t_536871841, key_536871842), Temporary1)[0]; result_536871843_Idx = Temporary1[1];
  framePtr = F.prev;

  return [result_536871843, result_536871843_Idx];

}

function internal_registerListener_536871724(eh_536871728, l_536871732) {
    var Temporary1;

  var F = {procname: "internal_registerListener.internal_registerListener", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (!(hasKey_536871092(eh_536871728.tbl, getTInfo_536871032()))) {
    F.line = 115;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,116,121,112,101,32,110,111,116,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182339, name: null, trace: [], up: null}, "UnregisteredEventDefect");
    }
    
    F.line = 117;
    (Temporary1 = HEX5BHEX5D_536871838(eh_536871728.tbl, getTInfo_536871032()), Temporary1)[0][Temporary1[1]].push([, l_536871732]);;
  framePtr = F.prev;

  
}

function internal_registerListener_536871992(eh_536871996, l_536872000) {
    var Temporary1;

  var F = {procname: "internal_registerListener.internal_registerListener", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (!(hasKey_536871092(eh_536871996.tbl, getTInfo_536871494()))) {
    F.line = 115;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,116,121,112,101,32,110,111,116,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182339, name: null, trace: [], up: null}, "UnregisteredEventDefect");
    }
    
    F.line = 117;
    (Temporary1 = HEX5BHEX5D_536871838(eh_536871996.tbl, getTInfo_536871494()), Temporary1)[0][Temporary1[1]].push([, l_536872000]);;
  framePtr = F.prev;

  
}

function internal_registerListener_536872123(eh_536872127, l_536872131) {
    var Temporary1;

  var F = {procname: "internal_registerListener.internal_registerListener", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    if (!(hasKey_536871092(eh_536872127.tbl, getTInfo_536871608()))) {
    F.line = 115;
    F.filename = "pulse.nim";
    raiseException({message: [69,118,101,110,116,32,116,121,112,101,32,110,111,116,32,114,101,103,105,115,116,101,114,101,100,33], parent: null, m_type: NTI1191182339, name: null, trace: [], up: null}, "UnregisteredEventDefect");
    }
    
    F.line = 117;
    (Temporary1 = HEX5BHEX5D_536871838(eh_536872127.tbl, getTInfo_536871608()), Temporary1)[0][Temporary1[1]].push([, l_536872131]);;
  framePtr = F.prev;

  
}

function fire_536872246(eh_536872249, o_536872250, p_536872251) {
      var Temporary2;

  var F = {procname: "fire.fire", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 125;
      F.filename = "pulse.nim";
      var handler_536872334 = null;
      var handler_536872334_Idx = 0;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536872740 = [];
      F.line = 125;
      F.filename = "pulse.nim";
      colontmp__536872740 = (Temporary2 = HEX5BHEX5D_536871838(eh_536872249.tbl, getTInfo_536871032()), Temporary2)[0][Temporary2[1]];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536872742 = 0;
      F.line = 242;
      var L_536872743 = (colontmp__536872740).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_536872742 < L_536872743)) break Label4;
            F.line = 125;
            F.filename = "pulse.nim";
            handler_536872334 = colontmp__536872740; handler_536872334_Idx = chckIndx(i_536872742, 0, (colontmp__536872740).length - 1);
            F.line = 130;
            var prc_536872337 = handler_536872334_Idx;
            F.line = 132;
            prc_536872337(o_536872250,p_536872251);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536872742 = addInt(i_536872742, 1);
            if (!(((colontmp__536872740).length == L_536872743))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function fire_536872370(eh_536872373, o_536872374, p_536872375) {
      var Temporary2;

  var F = {procname: "fire.fire", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 125;
      F.filename = "pulse.nim";
      var handler_536872440 = null;
      var handler_536872440_Idx = 0;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536872746 = [];
      F.line = 125;
      F.filename = "pulse.nim";
      colontmp__536872746 = (Temporary2 = HEX5BHEX5D_536871838(eh_536872373.tbl, getTInfo_536871494()), Temporary2)[0][Temporary2[1]];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536872747 = 0;
      F.line = 242;
      var L_536872748 = (colontmp__536872746).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_536872747 < L_536872748)) break Label4;
            F.line = 125;
            F.filename = "pulse.nim";
            handler_536872440 = colontmp__536872746; handler_536872440_Idx = chckIndx(i_536872747, 0, (colontmp__536872746).length - 1);
            F.line = 130;
            var prc_536872443 = handler_536872440_Idx;
            F.line = 132;
            prc_536872443(o_536872374,p_536872375);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536872747 = addInt(i_536872747, 1);
            if (!(((colontmp__536872746).length == L_536872748))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function fire_536872460(eh_536872463, o_536872464, p_536872465) {
      var Temporary2;

  var F = {procname: "fire.fire", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/src/pulse.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 125;
      F.filename = "pulse.nim";
      var handler_536872530 = null;
      var handler_536872530_Idx = 0;
      F.line = 239;
      F.filename = "iterators.nim";
      var colontmp__536872751 = [];
      F.line = 125;
      F.filename = "pulse.nim";
      colontmp__536872751 = (Temporary2 = HEX5BHEX5D_536871838(eh_536872463.tbl, getTInfo_536871608()), Temporary2)[0][Temporary2[1]];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536872752 = 0;
      F.line = 242;
      var L_536872753 = (colontmp__536872751).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_536872752 < L_536872753)) break Label4;
            F.line = 125;
            F.filename = "pulse.nim";
            handler_536872530 = colontmp__536872751; handler_536872530_Idx = chckIndx(i_536872752, 0, (colontmp__536872751).length - 1);
            F.line = 130;
            var prc_536872533 = handler_536872530_Idx;
            F.line = 132;
            prc_536872533(o_536872464,p_536872465);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536872752 = addInt(i_536872752, 1);
            if (!(((colontmp__536872751).length == L_536872753))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function isNimException_33556431() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556434 = null;

    if (isNimException_33556431()) {
    result_33556434 = lastJSError;
    }
    

  return result_33556434;

}

function exceptionTypeName_671089427(e_671089428) {
    var Temporary1;

  var result_671089429 = [];

  var F = {procname: "unittest.exceptionTypeName", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 518;
    F.filename = "unittest.nim";
    if ((e_671089428 == null)) {
    Temporary1 = [60,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,62];
    }
    else {
    Temporary1 = cstrToNimstr(e_671089428.name);
    }
    
    result_671089429 = nimCopy(null, Temporary1, NTI33554449);
  framePtr = F.prev;

  return result_671089429;

}

function checkpoint_671089437(msg_671089438) {
  var F = {procname: "unittest.checkpoint", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 592;
    F.filename = "unittest.nim";
    var Temporary1 = nimCopy(null, msg_671089438, NTI33554449);
    checkpoints_671088683[0].push(Temporary1);;
  framePtr = F.prev;

  
}

function getCurrentExceptionMsg_33556451() {
  var result_33556452 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556431()) {
    result_33556452 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556457 = null;
            if (lastJSError.message !== undefined) {
        msg_33556457 = lastJSError.message;
      }
      
      if (!((msg_33556457 == null))) {
      result_33556452 = nimCopy(null, cstrToNimstr(msg_33556457), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556452 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556452;

}

function getStackTrace_33556630(e_33556631) {
  var result_33556632 = [];

    result_33556632 = nimCopy(null, e_33556631.trace, NTI33554449);

  return result_33556632;

}

function setProgramResult_687865987(a_687865988) {
  var F = {procname: "exitprocs.setProgramResult", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/exitprocs.nim", line: 0};
  framePtr = F;
    F.line = 83;
    F.filename = "exitprocs.nim";
    process.exitCode = a_687865988;

  framePtr = F.prev;

  
}

function testEnded_671089418(testResult_671089419) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 465;
      F.filename = "unittest.nim";
      var formatter_671089423 = null;
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536872756 = 0;
      F.line = 242;
      var L_536872757 = (formatters_671088684[0]).length;
      Label2: {
        F.line = 243;
          Label3: while (true) {
          if (!(i_536872756 < L_536872757)) break Label3;
            F.line = 465;
            F.filename = "unittest.nim";
            formatter_671089423 = formatters_671088684[0][chckIndx(i_536872756, 0, (formatters_671088684[0]).length - 1)];
            F.line = 465;
            testEnded_671088716(formatter_671089423, testResult_671089419);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536872756 = addInt(i_536872756, 1);
            if (!(((formatters_671088684[0]).length == L_536872757))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function HEX3Aanonymous_536871711(a_536871712, b_536871713) {
  var F = {procname: "test1.:anonymous", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/tests/test1.nim", line: 0};
  framePtr = F;
    F.line = 24;
    F.filename = "test1.nim";
    rawEcho([65]);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_536871984(a_536871985, b_536871986) {
  var F = {procname: "test1.:anonymous", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/tests/test1.nim", line: 0};
  framePtr = F;
    F.line = 27;
    F.filename = "test1.nim";
    rawEcho([66]);
  framePtr = F.prev;

  
}

function HEX3Aanonymous_536872115(a_536872116, b_536872117) {
  var F = {procname: "test1.:anonymous", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/tests/test1.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "test1.nim";
    rawEcho(b_536872117);
  framePtr = F.prev;

  
}
var F = {procname: "module test1", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/tests/test1.nim", line: 0};
framePtr = F;
F.line = 541;
F.filename = "unittest.nim";
ensureInitialized_671089356();
if (shouldRun_671089223([], [83,121,110,99,32,69,118,101,110,116,115])) {
F.line = 544;
checkpoints_671088683[0] = nimCopy(null, [], NTI922746906);
F.line = 545;
var testStatusIMPL_536870922 = [0];
Label1: {
  F.line = 547;
  var formatter_536870926 = [null];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_536872666 = 0;
  F.line = 242;
  var L_536872667 = (formatters_671088684[0]).length;
  Label2: {
    F.line = 243;
      Label3: while (true) {
      if (!(i_536872666 < L_536872667)) break Label3;
        F.line = 547;
        F.filename = "unittest.nim";
        formatter_536870926[0] = formatters_671088684[0][chckIndx(i_536872666, 0, (formatters_671088684[0]).length - 1)];
        F.line = 547;
        testStarted_671088707(formatter_536870926[0], [83,121,110,99,32,69,118,101,110,116,115]);
        F.line = 245;
        F.filename = "iterators.nim";
        i_536872666 = addInt(i_536872666, 1);
        if (!(((formatters_671088684[0]).length == L_536872667))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
F.line = 551;
F.filename = "unittest.nim";
++excHandler;
try {
F.line = 17;
F.filename = "test1.nim";
var a_536871020 = [newEventHandler_536870927()];
F.line = 19;
registerEventType_536871021(a_536871020[0]);
F.line = 20;
registerEventType_536871483(a_536871020[0]);
F.line = 21;
registerEventType_536871597(a_536871020[0]);
F.line = 122;
F.filename = "pulse.nim";
internal_registerListener_536871724(a_536871020[0], HEX3Aanonymous_536871711);
F.line = 122;
internal_registerListener_536871992(a_536871020[0], HEX3Aanonymous_536871984);
F.line = 122;
internal_registerListener_536872123(a_536871020[0], HEX3Aanonymous_536872115);
F.line = 32;
F.filename = "test1.nim";
fire_536872246(a_536871020[0], {}, {});
F.line = 33;
fire_536872370(a_536871020[0], {}, {});
F.line = 34;
fire_536872460(a_536871020[0], {}, [72,101,108,108,111,44,32,87,111,114,108,100,33]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
framePtr = F;
F.line = 560;
F.filename = "unittest.nim";
var e_536872550 = getCurrentException();
F.line = 561;
var eTypeDesc_536872551 = ([91] || []).concat(exceptionTypeName_671089427(e_536872550) || [],[93] || []);
F.line = 562;
checkpoint_671089437(([85,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32] || []).concat(getCurrentExceptionMsg_33556451() || [],[32] || [],eTypeDesc_536872551 || []));
if ((e_536872550 == null)) {
F.line = 610;
testStatusIMPL_536870922[0] = 1;
F.line = 614;
ensureInitialized_671089356();
Label5: {
  F.line = 617;
  var formatterHEX60gensym29_536872560 = [null];
  F.line = 241;
  F.filename = "iterators.nim";
  var i_536872670 = 0;
  F.line = 242;
  var L_536872671 = (formatters_671088684[0]).length;
  Label6: {
    F.line = 243;
      Label7: while (true) {
      if (!(i_536872670 < L_536872671)) break Label7;
        F.line = 617;
        F.filename = "unittest.nim";
        formatterHEX60gensym29_536872560[0] = formatters_671088684[0][chckIndx(i_536872670, 0, (formatters_671088684[0]).length - 1)];
        F.line = 617;
        failureOccurred_671088712(formatterHEX60gensym29_536872560[0], checkpoints_671088683[0], []);
        F.line = 245;
        F.filename = "iterators.nim";
        i_536872670 = addInt(i_536872670, 1);
        if (!(((formatters_671088684[0]).length == L_536872671))) {
        F.line = 246;
        failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
        }
        
      }
  };
};
if (abortOnError_671088682[0]) {
F.line = 623;
F.filename = "unittest.nim";
process.exit(1);
}

F.line = 625;
checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
}
else {
  F.line = 566;
  var stackTrace_536872565 = [getStackTrace_33556630(e_536872550)];
  F.line = 610;
  testStatusIMPL_536870922[0] = 1;
  F.line = 614;
  ensureInitialized_671089356();
  Label8: {
    F.line = 617;
    var formatterHEX60gensym30_536872570 = [null];
    F.line = 241;
    F.filename = "iterators.nim";
    var i_536872674 = 0;
    F.line = 242;
    var L_536872675 = (formatters_671088684[0]).length;
    Label9: {
      F.line = 243;
        Label10: while (true) {
        if (!(i_536872674 < L_536872675)) break Label10;
          F.line = 617;
          F.filename = "unittest.nim";
          formatterHEX60gensym30_536872570[0] = formatters_671088684[0][chckIndx(i_536872674, 0, (formatters_671088684[0]).length - 1)];
          F.line = 617;
          failureOccurred_671088712(formatterHEX60gensym30_536872570[0], checkpoints_671088683[0], stackTrace_536872565[0]);
          F.line = 245;
          F.filename = "iterators.nim";
          i_536872674 = addInt(i_536872674, 1);
          if (!(((formatters_671088684[0]).length == L_536872675))) {
          F.line = 246;
          failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
          }
          
        }
    };
  };
  if (abortOnError_671088682[0]) {
  F.line = 623;
  F.filename = "unittest.nim";
  process.exit(1);
  }
  
  F.line = 625;
  checkpoints_671088683[0] = nimCopy(null, [], NTI671088655);
}

lastJSError = prevJSError;
} finally {
framePtr = F;
if ((testStatusIMPL_536870922[0] == 1)) {
F.line = 571;
setProgramResult_687865987(1);
}

F.line = 572;
var testResult_536872579 = {suiteName: [], testName: [83,121,110,99,32,69,118,101,110,116,115], status: testStatusIMPL_536870922[0]};
F.line = 577;
testEnded_671089418(testResult_536872579);
F.line = 578;
checkpoints_671088683[0] = nimCopy(null, [], NTI922746906);
}
}

framePtr = F.prev;
var F = {procname: "module test1", prev: framePtr, filename: "/data/data/com.termux/files/home/Pulse-Nim/tests/test1.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function sysFatal_33557095(message_33557098) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_33557098, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");
  framePtr = F.prev;

  
}

function chckNilDisp(p_33557094, p_33557094_Idx) {
    if ((p_33557094 == null && p_33557094_Idx == 0)) {
    sysFatal_33557095([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function writeData_1023410400(s_1023410401, buffer_1023410402, buffer_1023410402_Idx, bufLen_1023410403) {
  var F = {procname: "streams.writeData", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/streams.nim", line: 0};
  framePtr = F;
    F.line = 343;
    F.filename = "streams.nim";
    s_1023410401.writeDataImpl(s_1023410401, buffer_1023410402, buffer_1023410402_Idx, bufLen_1023410403);
  framePtr = F.prev;

  
}

function write_1023410409(s_1023410410, x_1023410411) {
  var F = {procname: "streams.write", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/streams.nim", line: 0};
  framePtr = F;
    if ((0 < (x_1023410411).length)) {
    F.line = 378;
    F.filename = "streams.nim";
    var x_1023410412 = [nimCopy(null, x_1023410411, NTI33554449)];
    F.line = 379;
    writeData_1023410400(s_1023410410, x_1023410412, 0, (x_1023410412[0]).length);
    }
    
  framePtr = F.prev;

  
}

function writeLine_1023410436(s_1023410437, args_1023410438) {
  var F = {procname: "streams.writeLine", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/streams.nim", line: 0};
  framePtr = F;
    Label1: {
      F.line = 406;
      F.filename = "streams.nim";
      var str_1023410442 = [];
      F.line = 13;
      F.filename = "iterators.nim";
      var i_536872761 = 0;
      Label2: {
        F.line = 14;
          Label3: while (true) {
          if (!(i_536872761 < (args_1023410438).length)) break Label3;
            F.line = 406;
            F.filename = "streams.nim";
            str_1023410442 = args_1023410438[chckIndx(i_536872761, 0, (args_1023410438).length - 1)];
            F.line = 406;
            write_1023410409(s_1023410437, str_1023410442);
            F.line = 16;
            F.filename = "iterators.nim";
            i_536872761 = addInt(i_536872761, 1);
          }
      };
    };
    F.line = 407;
    F.filename = "streams.nim";
    write_1023410409(s_1023410437, [10]);
  framePtr = F.prev;

  
}

function invalidFormatString_754976998(formatstr_754976999) {
  var F = {procname: "strutils.invalidFormatString", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2780;
    F.filename = "strutils.nim";
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_754976999 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function toLowerAscii_1006632961(c_1006632962) {
  var result_1006632963 = 0;

  var F = {procname: "strimpl.toLowerAscii", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/std/private/strimpl.nim", line: 0};
  framePtr = F;
    if ((ConstSet6[c_1006632962] != undefined)) {
    F.line = 3;
    F.filename = "strimpl.nim";
    result_1006632963 = chckRange(addInt(c_1006632962, 32), 0, 255);
    }
    else {
      F.line = 5;
      result_1006632963 = c_1006632962;
    }
    
  framePtr = F.prev;

  return result_1006632963;

}

function nsuCmpIgnoreStyle(a_754974927, b_754974928) {
          var Temporary7;
          var Temporary8;

  var result_754974929 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_754974938 = (a_754974927).length;
    var bLenHEX60gensym24_754974939 = (b_754974928).length;
    var iHEX60gensym24_754974940 = 0;
    var jHEX60gensym24_754974941 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_754974940 < aLenHEX60gensym24_754974938) && (a_754974927[iHEX60gensym24_754974940] == 95))) break Label4;
                iHEX60gensym24_754974940 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_754974941 < bLenHEX60gensym24_754974939) && (b_754974928[jHEX60gensym24_754974941] == 95))) break Label6;
                jHEX60gensym24_754974941 += 1;
              }
          };
          if ((iHEX60gensym24_754974940 < aLenHEX60gensym24_754974938)) {
          Temporary7 = toLowerAscii_1006632961(a_754974927[iHEX60gensym24_754974940]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_754974950 = Temporary7;
          if ((jHEX60gensym24_754974941 < bLenHEX60gensym24_754974939)) {
          Temporary8 = toLowerAscii_1006632961(b_754974928[jHEX60gensym24_754974941]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_754974951 = Temporary8;
          result_754974929 = (aaHEX60gensym24_754974950 - bbHEX60gensym24_754974951);
          if (!((result_754974929 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_754974938 <= iHEX60gensym24_754974940)) {
          if ((bLenHEX60gensym24_754974939 <= jHEX60gensym24_754974941)) {
          result_754974929 = 0;
          break BeforeRet;
          }
          
          result_754974929 = (-1);
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_754974939 <= jHEX60gensym24_754974941)) {
          result_754974929 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_754974940 += 1;
          jHEX60gensym24_754974941 += 1;
        }
    };
  };

  return result_754974929;

}

function findNormalized_754976986(x_754976987, inArray_754976988) {
  var result_754976989 = 0;

  var F = {procname: "strutils.findNormalized", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 2772;
    F.filename = "strutils.nim";
    var i_754976990 = 0;
    Label1: {
      F.line = 2773;
        Label2: while (true) {
        if (!(i_754976990 < (inArray_754976988).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_754976987, inArray_754976988[chckIndx(i_754976990, 0, (inArray_754976988).length - 1)]) == 0)) {
          F.line = 2774;
          result_754976989 = i_754976990;
          break BeforeRet;
          }
          
          F.line = 2775;
          i_754976990 = addInt(i_754976990, 2);
        }
    };
    F.line = 2777;
    result_754976989 = (-1);
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_754976989;

}

function nsuAddf(s_754977002, s_754977002_Idx, formatstr_754977003, a_754977004) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

  var F = {procname: "strutils.addf", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2786;
    F.filename = "strutils.nim";
    var i_754977006 = 0;
    F.line = 2787;
    var num_754977007 = 0;
    Label1: {
      F.line = 2788;
        Label2: while (true) {
        if (!(i_754977006 < (formatstr_754977003).length)) break Label2;
          if (((formatstr_754977003[chckIndx(i_754977006, 0, (formatstr_754977003).length - 1)] == 36) && (addInt(i_754977006, 1) < (formatstr_754977003).length))) {
          F.line = 2790;
          switch (formatstr_754977003[chckIndx(addInt(i_754977006, 1), 0, (formatstr_754977003).length - 1)]) {
          case 35:
            if (((a_754977004).length - 1 < num_754977007)) {
            F.line = 2792;
            invalidFormatString_754976998(formatstr_754977003);
            }
            
            F.line = 2793;
            s_754977002[s_754977002_Idx].push.apply(s_754977002[s_754977002_Idx], a_754977004[chckIndx(num_754977007, 0, (a_754977004).length - 1)]);;
            F.line = 2794;
            i_754977006 = addInt(i_754977006, 2);
            F.line = 2795;
            num_754977007 = addInt(num_754977007, 1);
            break;
          case 36:
            F.line = 2797;
            addChar(s_754977002[s_754977002_Idx], 36);;
            F.line = 2798;
            i_754977006 = addInt(i_754977006, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            F.line = 2800;
            var j_754977023 = 0;
            F.line = 2801;
            i_754977006 = addInt(i_754977006, 1);
            F.line = 2802;
            var negative_754977028 = (formatstr_754977003[chckIndx(i_754977006, 0, (formatstr_754977003).length - 1)] == 45);
            if (negative_754977028) {
            F.line = 2803;
            i_754977006 = addInt(i_754977006, 1);
            }
            
            Label3: {
              F.line = 2804;
                Label4: while (true) {
                  if (!(i_754977006 < (formatstr_754977003).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet3[formatstr_754977003[chckIndx(i_754977006, 0, (formatstr_754977003).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  F.line = 2805;
                  j_754977023 = subInt(addInt(mulInt(j_754977023, 10), formatstr_754977003[chckIndx(i_754977006, 0, (formatstr_754977003).length - 1)]), 48);
                  F.line = 2806;
                  i_754977006 = addInt(i_754977006, 1);
                }
            };
            F.line = 2807;
            if (!(negative_754977028)) {
            Temporary6 = subInt(j_754977023, 1);
            }
            else {
            Temporary6 = subInt((a_754977004).length, j_754977023);
            }
            
            var idx_754977051 = Temporary6;
            if (((idx_754977051 < 0) || ((a_754977004).length - 1 < idx_754977051))) {
            F.line = 2808;
            invalidFormatString_754976998(formatstr_754977003);
            }
            
            F.line = 2809;
            s_754977002[s_754977002_Idx].push.apply(s_754977002[s_754977002_Idx], a_754977004[chckIndx(idx_754977051, 0, (a_754977004).length - 1)]);;
            break;
          case 123:
            F.line = 2811;
            var j_754977055 = addInt(i_754977006, 2);
            F.line = 2812;
            var k_754977056 = 0;
            F.line = 2813;
            var negative_754977057 = (formatstr_754977003[chckIndx(j_754977055, 0, (formatstr_754977003).length - 1)] == 45);
            if (negative_754977057) {
            F.line = 2814;
            j_754977055 = addInt(j_754977055, 1);
            }
            
            F.line = 2815;
            var isNumber_754977062 = 0;
            Label7: {
              F.line = 2816;
                Label8: while (true) {
                if (!((j_754977055 < (formatstr_754977003).length) && !((ConstSet4[formatstr_754977003[chckIndx(j_754977055, 0, (formatstr_754977003).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet5[formatstr_754977003[chckIndx(j_754977055, 0, (formatstr_754977003).length - 1)]] != undefined)) {
                  F.line = 2818;
                  k_754977056 = subInt(addInt(mulInt(k_754977056, 10), formatstr_754977003[chckIndx(j_754977055, 0, (formatstr_754977003).length - 1)]), 48);
                  if ((isNumber_754977062 == 0)) {
                  F.line = 2819;
                  isNumber_754977062 = 1;
                  }
                  
                  }
                  else {
                    F.line = 2821;
                    isNumber_754977062 = (-1);
                  }
                  
                  F.line = 2822;
                  j_754977055 = addInt(j_754977055, 1);
                }
            };
            if ((isNumber_754977062 == 1)) {
            F.line = 2824;
            if (!(negative_754977057)) {
            Temporary9 = subInt(k_754977056, 1);
            }
            else {
            Temporary9 = subInt((a_754977004).length, k_754977056);
            }
            
            var idx_754977084 = Temporary9;
            if (((idx_754977084 < 0) || ((a_754977004).length - 1 < idx_754977084))) {
            F.line = 2825;
            invalidFormatString_754976998(formatstr_754977003);
            }
            
            F.line = 2826;
            s_754977002[s_754977002_Idx].push.apply(s_754977002[s_754977002_Idx], a_754977004[chckIndx(idx_754977084, 0, (a_754977004).length - 1)]);;
            }
            else {
              F.line = 2828;
              var x_754977088 = findNormalized_754976986(substr_33558046(formatstr_754977003, addInt(i_754977006, 2), subInt(j_754977055, 1)), a_754977004);
              if (((0 <= x_754977088) && (x_754977088 < (a_754977004).length - 1))) {
              F.line = 2829;
              s_754977002[s_754977002_Idx].push.apply(s_754977002[s_754977002_Idx], a_754977004[chckIndx(addInt(x_754977088, 1), 0, (a_754977004).length - 1)]);;
              }
              else {
                F.line = 2830;
              invalidFormatString_754976998(formatstr_754977003);
              }
              
            }
            
            F.line = 2831;
            i_754977006 = addInt(j_754977055, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            F.line = 2833;
            var j_754977092 = addInt(i_754977006, 1);
            Label10: {
              F.line = 2834;
                Label11: while (true) {
                  if (!(j_754977092 < (formatstr_754977003).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet7[formatstr_754977003[chckIndx(j_754977092, 0, (formatstr_754977003).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  F.line = 2834;
                  j_754977092 = addInt(j_754977092, 1);
                }
            };
            F.line = 2835;
            var x_754977101 = findNormalized_754976986(substr_33558046(formatstr_754977003, addInt(i_754977006, 1), subInt(j_754977092, 1)), a_754977004);
            if (((0 <= x_754977101) && (x_754977101 < (a_754977004).length - 1))) {
            F.line = 2836;
            s_754977002[s_754977002_Idx].push.apply(s_754977002[s_754977002_Idx], a_754977004[chckIndx(addInt(x_754977101, 1), 0, (a_754977004).length - 1)]);;
            }
            else {
              F.line = 2837;
            invalidFormatString_754976998(formatstr_754977003);
            }
            
            F.line = 2838;
            i_754977006 = j_754977092;
            break;
          default: 
            F.line = 2840;
            invalidFormatString_754976998(formatstr_754977003);
            break;
          }
          }
          else {
            F.line = 2842;
            addChar(s_754977002[s_754977002_Idx], formatstr_754977003[chckIndx(i_754977006, 0, (formatstr_754977003).length - 1)]);;
            F.line = 2843;
            i_754977006 = addInt(i_754977006, 1);
          }
          
        }
    };
  framePtr = F.prev;

  
}

function nsuFormatSingleElem(formatstr_754977121, a_754977122) {
  var result_754977123 = [[]];

  var F = {procname: "strutils.%", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2902;
    F.filename = "strutils.nim";
    result_754977123[0] = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 2903;
    nsuAddf(result_754977123, 0, formatstr_754977121, [nimCopy(null, a_754977122, NTI33554449)]);
  framePtr = F.prev;

  return result_754977123[0];

}

function xmlEscape_671089040(s_671089041) {
  var result_671089042 = [];

  var F = {procname: "unittest.xmlEscape", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 307;
    F.filename = "unittest.nim";
    result_671089042 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      F.line = 308;
      var c_671089043 = 0;
      F.line = 259;
      F.filename = "iterators.nim";
      var i_536872772 = 0;
      F.line = 260;
      var L_536872773 = (s_671089041).length;
      Label2: {
        F.line = 261;
          Label3: while (true) {
          if (!(i_536872772 < L_536872773)) break Label3;
            F.line = 308;
            F.filename = "unittest.nim";
            c_671089043 = s_671089041[chckIndx(i_536872772, 0, (s_671089041).length - 1)];
            F.line = 308;
            switch (c_671089043) {
            case 60:
              F.line = 310;
              result_671089042.push.apply(result_671089042, [38,108,116,59]);;
              break;
            case 62:
              F.line = 311;
              result_671089042.push.apply(result_671089042, [38,103,116,59]);;
              break;
            case 38:
              F.line = 312;
              result_671089042.push.apply(result_671089042, [38,97,109,112,59]);;
              break;
            case 34:
              F.line = 313;
              result_671089042.push.apply(result_671089042, [38,113,117,111,116,59]);;
              break;
            case 39:
              F.line = 314;
              result_671089042.push.apply(result_671089042, [38,97,112,111,115,59]);;
              break;
            default: 
              if ((c_671089043 < 32)) {
              F.line = 317;
              result_671089042.push.apply(result_671089042, ([38,35] || []).concat(HEX24_369098760(c_671089043) || [],[59]));;
              }
              else {
                F.line = 319;
              addChar(result_671089042, c_671089043);;
              }
              
              break;
            }
            F.line = 263;
            F.filename = "iterators.nim";
            i_536872772 = addInt(i_536872772, 1);
            if (!(((s_671089041).length == L_536872773))) {
            F.line = 264;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  return result_671089042;

}

function suiteStarted_671089094(formatter_671089095, suiteName_671089096) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 342;
    F.filename = "unittest.nim";
    writeLine_1023410436(formatter_671089095.stream, [nsuFormatSingleElem([9,60,116,101,115,116,115,117,105,116,101,32,110,97,109,101,61,34,36,49,34,62], xmlEscape_671089040(suiteName_671089096))]);
  framePtr = F.prev;

  
}

function suiteStarted_671088951(formatter_671088952, suiteName_671088953) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 268;
    F.filename = "unittest.nim";
    rawEcho([10,91,83,117,105,116,101,93,32], suiteName_671088953);
    F.line = 269;
    formatter_671088952.isInSuite = true;
  framePtr = F.prev;

  
}

function suiteStarted_671088700(formatter_671088701, suiteName_671088702) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function suiteStarted_671088703(formatter_671088701, suiteName_671088702) {
  var F = {procname: "unittest.suiteStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 509;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088701);
    if (isObj(formatter_671088701.m_type, NTI671088653)) {
    F.line = 199;
    F.filename = "unittest.nim";
    suiteStarted_671089094(formatter_671088701, suiteName_671088702);
    }
    else {
    if (isObj(formatter_671088701.m_type, NTI671088652)) {
    F.line = 199;
    suiteStarted_671088951(formatter_671088701, suiteName_671088702);
    }
    else {
    if (isObj(formatter_671088701.m_type, NTI671088651)) {
    F.line = 199;
    suiteStarted_671088700(formatter_671088701, suiteName_671088702);
    }
    }}
  framePtr = F.prev;

  
}

function toFloat_33556004(i_33556005) {
  var result_33556006 = 0.0;

  var F = {procname: "system.toFloat", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1272;
    F.filename = "system.nim";
    result_33556006 = i_33556005;
  framePtr = F.prev;

  return result_33556006;

}

function HEX2F_33556016(x_33556017, y_33556018) {
  var result_33556019 = 0.0;

  var F = {procname: "system./", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1320;
    F.filename = "system.nim";
    result_33556019 = (toFloat_33556004(x_33556017) / toFloat_33556004(y_33556018));
  framePtr = F.prev;

  return result_33556019;

}

function epochTime_1040191684() {
  var result_1040191685 = 0.0;

  var F = {procname: "times.epochTime", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/times.nim", line: 0};
  framePtr = F;
    F.line = 2808;
    F.filename = "times.nim";
    result_1040191685 = HEX2F_33556016(new Date().getTime(), 1000);
  framePtr = F.prev;

  return result_1040191685;

}

function testStarted_671089097(formatter_671089098, testName_671089099) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 345;
    F.filename = "unittest.nim";
    if (formatter_671089098.testErrors.length < 0) { for (var i = formatter_671089098.testErrors.length ; i < 0 ; ++i) formatter_671089098.testErrors.push([]); }
               else { formatter_671089098.testErrors.length = 0; };
    F.line = 346;
    if (formatter_671089098.testStackTrace.length < 0) { for (var i = formatter_671089098.testStackTrace.length; i < 0; ++i) formatter_671089098.testStackTrace.push(0); }
         else {formatter_671089098.testStackTrace.length = 0; };
    F.line = 347;
    formatter_671089098.testStartTime = epochTime_1040191684();
  framePtr = F.prev;

  
}

function testStarted_671088971(formatter_671088972, testName_671088973) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 272;
    F.filename = "unittest.nim";
    formatter_671088972.isInTest = true;
  framePtr = F.prev;

  
}

function testStarted_671088704(formatter_671088705, testName_671088706) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function testStarted_671088707(formatter_671088705, testName_671088706) {
  var F = {procname: "unittest.testStarted", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 509;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088705);
    if (isObj(formatter_671088705.m_type, NTI671088653)) {
    F.line = 201;
    F.filename = "unittest.nim";
    testStarted_671089097(formatter_671088705, testName_671088706);
    }
    else {
    if (isObj(formatter_671088705.m_type, NTI671088652)) {
    F.line = 201;
    testStarted_671088971(formatter_671088705, testName_671088706);
    }
    else {
    if (isObj(formatter_671088705.m_type, NTI671088651)) {
    F.line = 201;
    testStarted_671088704(formatter_671088705, testName_671088706);
    }
    }}
  framePtr = F.prev;

  
}

function add_671089108(x_671089110, x_671089110_Idx, y_671089111) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 1184;
    F.filename = "system.nim";
    var xl_671089115 = (x_671089110[x_671089110_Idx]).length;
    F.line = 1185;
    if (x_671089110[x_671089110_Idx].length < (Temporary1 = chckRange(addInt(xl_671089115, (y_671089111).length), 0, 2147483647), Temporary1)) { for (var i = x_671089110[x_671089110_Idx].length ; i < Temporary1 ; ++i) x_671089110[x_671089110_Idx].push([]); }
               else { x_671089110[x_671089110_Idx].length = Temporary1; };
    Label2: {
      F.line = 1186;
      var i_671089130 = 0;
      F.line = 75;
      F.filename = "iterators_1.nim";
      var colontmp__536872776 = 0;
      F.line = 1186;
      F.filename = "system.nim";
      colontmp__536872776 = (y_671089111).length - 1;
      F.line = 90;
      F.filename = "iterators_1.nim";
      var res_536872777 = 0;
      Label3: {
        F.line = 91;
          Label4: while (true) {
          if (!(res_536872777 <= colontmp__536872776)) break Label4;
            F.line = 1186;
            F.filename = "system.nim";
            i_671089130 = res_536872777;
            F.line = 1186;
            x_671089110[x_671089110_Idx][chckIndx(addInt(xl_671089115, i_671089130), 0, (x_671089110[x_671089110_Idx]).length - 1)] = nimCopy(null, y_671089111[chckIndx(i_671089130, 0, (y_671089111).length - 1)], NTI33554449);
            F.line = 93;
            F.filename = "iterators_1.nim";
            res_536872777 = addInt(res_536872777, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function failureOccurred_671089104(formatter_671089105, checkpoints_671089106, stackTrace_671089107) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 353;
    F.filename = "unittest.nim";
    add_671089108(formatter_671089105, "testErrors", checkpoints_671089106);
    if ((0 < (stackTrace_671089107).length)) {
    F.line = 355;
    formatter_671089105.testStackTrace = nimCopy(null, stackTrace_671089107, NTI33554449);
    }
    
  framePtr = F.prev;

  
}

function failureOccurred_671088974(formatter_671088975, checkpoints_671088976, stackTrace_671088977) {
    var Temporary1;

  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    if ((0 < (stackTrace_671088977).length)) {
    F.line = 277;
    F.filename = "unittest.nim";
    rawEcho(stackTrace_671088977);
    }
    
    F.line = 278;
    if (formatter_671088975.isInSuite) {
    Temporary1 = [32,32,32,32];
    }
    else {
    Temporary1 = [];
    }
    
    var prefix_671088978 = nimCopy(null, Temporary1, NTI33554449);
    Label2: {
      F.line = 279;
      var msg_671088999 = [];
      F.line = 241;
      F.filename = "iterators.nim";
      var i_536872781 = 0;
      F.line = 242;
      var L_536872782 = (checkpoints_671088976).length;
      Label3: {
        F.line = 243;
          Label4: while (true) {
          if (!(i_536872781 < L_536872782)) break Label4;
            F.line = 279;
            F.filename = "unittest.nim";
            msg_671088999 = checkpoints_671088976[chckIndx(i_536872781, 0, (checkpoints_671088976).length - 1)];
            F.line = 279;
            rawEcho(prefix_671088978, msg_671088999);
            F.line = 245;
            F.filename = "iterators.nim";
            i_536872781 = addInt(i_536872781, 1);
            if (!(((checkpoints_671088976).length == L_536872782))) {
            F.line = 246;
            failedAssertImpl_268435541(makeNimstrLit("/data/data/com.termux/files/home/.nim/devel/lib/system/iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  framePtr = F.prev;

  
}

function failureOccurred_671088708(formatter_671088709, checkpoints_671088710, stackTrace_671088711) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function failureOccurred_671088712(formatter_671088709, checkpoints_671088710, stackTrace_671088711) {
  var F = {procname: "unittest.failureOccurred", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 509;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088709);
    if (isObj(formatter_671088709.m_type, NTI671088653)) {
    F.line = 203;
    F.filename = "unittest.nim";
    failureOccurred_671089104(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    else {
    if (isObj(formatter_671088709.m_type, NTI671088652)) {
    F.line = 203;
    failureOccurred_671088974(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    else {
    if (isObj(formatter_671088709.m_type, NTI671088651)) {
    F.line = 203;
    failureOccurred_671088708(formatter_671088709, checkpoints_671088710, stackTrace_671088711);
    }
    }}
  framePtr = F.prev;

  
}

function nsuformatBiggestFloat(f_754976753, format_754976754, precision_754976755, decimalSep_754976756) {
  var result_754976757 = [];

  var F = {procname: "strutils.formatBiggestFloat", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2475;
    F.filename = "strutils.nim";
    var precision_754976758 = precision_754976755;
    if ((precision_754976758 == (-1))) {
    F.line = 2478;
    precision_754976758 = 6;
    }
    
    F.line = 2479;
    var res_754976759 = null;
    F.line = 2480;
    switch (format_754976754) {
    case 0:
      F.line = 2482;
      res_754976759 = f_754976753.toString();
      break;
    case 1:
      F.line = 2484;
      res_754976759 = f_754976753.toFixed(precision_754976758);
      break;
    case 2:
      F.line = 2486;
      res_754976759 = f_754976753.toExponential(precision_754976758);
      break;
    }
    F.line = 2487;
    result_754976757 = nimCopy(null, cstrToNimstr(res_754976759), NTI33554449);
    if (((1.0 / f_754976753) == -Infinity)) {
    F.line = 2490;
    result_754976757 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_754976759) || []), NTI33554449);
    }
    
    Label1: {
      F.line = 2491;
      var i_754976764 = 0;
      F.line = 117;
      F.filename = "iterators_1.nim";
      var colontmp__536872788 = 0;
      F.line = 2491;
      F.filename = "strutils.nim";
      colontmp__536872788 = (result_754976757).length;
      F.line = 119;
      F.filename = "iterators_1.nim";
      var i_536872789 = 0;
      Label2: {
        F.line = 120;
          Label3: while (true) {
          if (!(i_536872789 < colontmp__536872788)) break Label3;
            F.line = 2491;
            F.filename = "strutils.nim";
            i_754976764 = i_536872789;
            if ((ConstSet8[result_754976757[chckIndx(i_754976764, 0, (result_754976757).length - 1)]] != undefined)) {
            F.line = 2494;
            result_754976757[chckIndx(i_754976764, 0, (result_754976757).length - 1)] = decimalSep_754976756;
            }
            
            F.line = 122;
            F.filename = "iterators_1.nim";
            i_536872789 = addInt(i_536872789, 1);
          }
      };
    };
  framePtr = F.prev;

  return result_754976757;

}

function nsuformatFloat(f_754976786, format_754976787, precision_754976788, decimalSep_754976789) {
  var result_754976790 = [];

  var F = {procname: "strutils.formatFloat", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2548;
    F.filename = "strutils.nim";
    result_754976790 = nimCopy(null, nsuformatBiggestFloat(f_754976786, format_754976787, precision_754976788, decimalSep_754976789), NTI33554449);
  framePtr = F.prev;

  return result_754976790;

}

function nsuFormatOpenArray(formatstr_754977110, a_754977111) {
  var result_754977112 = [[]];

  var F = {procname: "strutils.%", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/strutils.nim", line: 0};
  framePtr = F;
    F.line = 2895;
    F.filename = "strutils.nim";
    result_754977112[0] = nimCopy(null, mnewString(0), NTI33554449);
    F.line = 2896;
    nsuAddf(result_754977112, 0, formatstr_754977110, a_754977111);
  framePtr = F.prev;

  return result_754977112[0];

}

function HEX5BHEX5D_671089139(s_671089141, i_671089142) {
  var result_671089143 = null;
  var result_671089143_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/system/indices.nim", line: 0};
  framePtr = F;
    F.line = 30;
    F.filename = "indices.nim";
    result_671089143 = s_671089141; result_671089143_Idx = chckIndx(subInt((s_671089141).length, i_671089142), 0, (s_671089141).length - 1);
  framePtr = F.prev;

  return [result_671089143, result_671089143_Idx];

}

function testEnded_671089131(formatter_671089132, testResult_671089133) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 358;
    F.filename = "unittest.nim";
    var time_671089134 = (epochTime_1040191684() - formatter_671089132.testStartTime);
    F.line = 359;
    var timeStr_671089135 = nsuformatFloat(time_671089134, 1, 8, 46);
    F.line = 360;
    writeLine_1023410436(formatter_671089132.stream, [nsuFormatOpenArray([9,9,60,116,101,115,116,99,97,115,101,32,110,97,109,101,61,34,36,35,34,32,116,105,109,101,61,34,36,35,34,62], [xmlEscape_671089040(testResult_671089133.testName), nimCopy(null, timeStr_671089135, NTI33554449)])]);
    F.line = 362;
    switch (testResult_671089133.status) {
    case 0:
      break;
    case 2:
      F.line = 366;
      writeLine_1023410436(formatter_671089132.stream, [[60,115,107,105,112,112,101,100,32,47,62]]);
      break;
    case 1:
      F.line = 368;
      if (((0 < (formatter_671089132.testStackTrace).length) && (0 < (formatter_671089132.testErrors).length))) {
      Temporary1 = xmlEscape_671089040((Temporary2 = HEX5BHEX5D_671089139(formatter_671089132.testErrors, 1), Temporary2)[0][Temporary2[1]]);
      }
      else {
      if ((0 < (formatter_671089132.testErrors).length)) {
      Temporary1 = xmlEscape_671089040(formatter_671089132.testErrors[chckIndx(0, 0, (formatter_671089132.testErrors).length - 1)]);
      }
      else {
      Temporary1 = [84,104,101,32,116,101,115,116,32,102,97,105,108,101,100,32,119,105,116,104,111,117,116,32,111,117,116,112,117,116,116,105,110,103,32,97,110,32,101,114,114,111,114];
      }
      }
      var failureMsg_671089166 = nimCopy(null, Temporary1, NTI33554449);
      F.line = 375;
      var errs_671089167 = [];
      if ((1 < (formatter_671089132.testErrors).length)) {
      F.line = 377;
      if ((0 < (formatter_671089132.testStackTrace).length)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = 1;
      }
      
      var startIdx_671089171 = Temporary3;
      F.line = 378;
      if ((0 < (formatter_671089132.testStackTrace).length)) {
      Temporary4 = subInt((formatter_671089132.testErrors).length, 2);
      }
      else {
      Temporary4 = subInt((formatter_671089132.testErrors).length, 1);
      }
      
      var endIdx_671089178 = Temporary4;
      Label5: {
        F.line = 382;
        var errIdx_671089183 = 0;
        F.line = 90;
        F.filename = "iterators_1.nim";
        var res_536872785 = startIdx_671089171;
        Label6: {
          F.line = 91;
            Label7: while (true) {
            if (!(res_536872785 <= endIdx_671089178)) break Label7;
              F.line = 382;
              F.filename = "unittest.nim";
              errIdx_671089183 = res_536872785;
              if ((0 < (errs_671089167).length)) {
              F.line = 384;
              errs_671089167.push.apply(errs_671089167, [10]);;
              }
              
              F.line = 382;
              errs_671089167.push.apply(errs_671089167, xmlEscape_671089040(formatter_671089132.testErrors[chckIndx(errIdx_671089183, 0, (formatter_671089132.testErrors).length - 1)]));;
              F.line = 93;
              F.filename = "iterators_1.nim";
              res_536872785 = addInt(res_536872785, 1);
            }
        };
      };
      }
      
      if ((0 < (formatter_671089132.testStackTrace).length)) {
      F.line = 388;
      F.filename = "unittest.nim";
      writeLine_1023410436(formatter_671089132.stream, [nsuFormatOpenArray([9,9,9,60,101,114,114,111,114,32,109,101,115,115,97,103,101,61,34,36,35,34,62,36,35,60,47,101,114,114,111,114,62], [nimCopy(null, failureMsg_671089166, NTI33554449), xmlEscape_671089040(formatter_671089132.testStackTrace)])]);
      if ((0 < (errs_671089167).length)) {
      F.line = 391;
      writeLine_1023410436(formatter_671089132.stream, [nsuFormatSingleElem([9,9,9,60,115,121,115,116,101,109,45,101,114,114,62,36,35,60,47,115,121,115,116,101,109,45,101,114,114,62], errs_671089167)]);
      }
      
      }
      else {
        F.line = 393;
      writeLine_1023410436(formatter_671089132.stream, [nsuFormatOpenArray([9,9,9,60,102,97,105,108,117,114,101,32,109,101,115,115,97,103,101,61,34,36,35,34,62,36,35,60,47,102,97,105,108,117,114,101,62], [nimCopy(null, failureMsg_671089166, NTI33554449), nimCopy(null, errs_671089167, NTI33554449)])]);
      }
      
      break;
    }
    F.line = 396;
    writeLine_1023410436(formatter_671089132.stream, [[9,9,60,47,116,101,115,116,99,97,115,101,62]]);
  framePtr = F.prev;

  
}

function testEnded_671089000(formatter_671089001, testResult_671089002) {
    var Temporary1;

  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 283;
    F.filename = "unittest.nim";
    formatter_671089001.isInTest = false;
    if ((!((formatter_671089001.outputLevel == 2)) && ((formatter_671089001.outputLevel == 0) || (testResult_671089002.status == 1)))) {
    F.line = 287;
    if ((0 < (testResult_671089002.suiteName).length)) {
    Temporary1 = [32,32];
    }
    else {
    Temporary1 = [];
    }
    
    var prefix_671089017 = nimCopy(null, Temporary1, NTI33554449);
    F.line = 301;
    rawEcho(prefix_671089017, [91], reprEnum(testResult_671089002.status, NTI671088643), [93,32], testResult_671089002.testName);
    }
    
  framePtr = F.prev;

  
}

function testEnded_671088713(formatter_671088714, testResult_671088715) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function testEnded_671088716(formatter_671088714, testResult_671088715) {
  var F = {procname: "unittest.testEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 509;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088714);
    if (isObj(formatter_671088714.m_type, NTI671088653)) {
    F.line = 208;
    F.filename = "unittest.nim";
    testEnded_671089131(formatter_671088714, testResult_671088715);
    }
    else {
    if (isObj(formatter_671088714.m_type, NTI671088652)) {
    F.line = 208;
    testEnded_671089000(formatter_671088714, testResult_671088715);
    }
    else {
    if (isObj(formatter_671088714.m_type, NTI671088651)) {
    F.line = 208;
    testEnded_671088713(formatter_671088714, testResult_671088715);
    }
    }}
  framePtr = F.prev;

  
}

function suiteEnded_671089184(formatter_671089185) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 399;
    F.filename = "unittest.nim";
    writeLine_1023410436(formatter_671089185.stream, [[9,60,47,116,101,115,116,115,117,105,116,101,62]]);
  framePtr = F.prev;

  
}

function suiteEnded_671089038(formatter_671089039) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 304;
    F.filename = "unittest.nim";
    formatter_671089039.isInSuite = false;
  framePtr = F.prev;

  
}

function suiteEnded_671088717(formatter_671088718) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
  framePtr = F.prev;

  
}

function suiteEnded_671088719(formatter_671088718) {
  var F = {procname: "unittest.suiteEnded", prev: framePtr, filename: "/data/data/com.termux/files/home/.nim/devel/lib/pure/unittest.nim", line: 0};
  framePtr = F;
    F.line = 509;
    F.filename = "jssys.nim";
    chckNilDisp(formatter_671088718);
    if (isObj(formatter_671088718.m_type, NTI671088653)) {
    F.line = 210;
    F.filename = "unittest.nim";
    suiteEnded_671089184(formatter_671088718);
    }
    else {
    if (isObj(formatter_671088718.m_type, NTI671088652)) {
    F.line = 210;
    suiteEnded_671089038(formatter_671088718);
    }
    else {
    if (isObj(formatter_671088718.m_type, NTI671088651)) {
    F.line = 210;
    suiteEnded_671088717(formatter_671088718);
    }
    }}
  framePtr = F.prev;

  
}
